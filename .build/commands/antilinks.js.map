{
  "version": 3,
  "sources": ["../../commands/antilinks.ts"],
  "sourcesContent": ["import type { ChatInputCommandInteraction, GuildMember, TextChannel } from 'discord.js';\nimport { SlashCommandBuilder, PermissionFlagsBits } from 'discord.js';\nimport { successEmbedBuilder, errorEmbedBuilder, logBuilder } from '../utils.js';\nimport prisma from '../database.js';\n\nexport default class AntiLinks {\n\tdata = new SlashCommandBuilder()\n\t\t.setName('antilinks')\n\t\t.setDescription('Toggle Anti Links in your server (this will block every self promotion link)!')\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand(subcommand => subcommand.setName('on').setDescription('turn anti links on!'))\n\t\t.addSubcommand(subcommand => subcommand.setName('off').setDescription('turn anti links off!'));\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder('This command can only be run on a server!')] });\n\t\t\treturn;\n\t\t}\n\n\t\tawait interaction.deferReply({ ephemeral: true });\n\n\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\tcase 'on':\n\t\t\t\tconst onGuild = await prisma.guild.upsert({\n\t\t\t\t\twhere: { guild: interaction.guildId! },\n\t\t\t\t\tupdate: { antiLinks: true },\n\t\t\t\t\tcreate: { antiLinks: true, guild: interaction.guildId! },\n\t\t\t\t});\n\n\t\t\t\tawait interaction.editReply({ embeds: [successEmbedBuilder('Anti Links has been turned on!')] });\n\n\t\t\t\tconst onLogs = interaction.guild?.channels.cache.get(onGuild?.logs!) as TextChannel;\n\t\t\t\tawait onLogs?.send(\n\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\tcontent: `Anti Links has been activated by ${interaction.user}!`,\n\t\t\t\t\t\treason: `anti links feature has been activated by ${interaction.user.tag}`,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase 'off':\n\t\t\t\tconst offGuild = await prisma.guild.upsert({\n\t\t\t\t\twhere: { guild: interaction.guildId! },\n\t\t\t\t\tupdate: { antiLinks: false },\n\t\t\t\t\tcreate: { antiLinks: false, guild: interaction.guildId! },\n\t\t\t\t});\n\n\t\t\t\tconst offLogs = interaction.guild?.channels.cache.get(offGuild?.logs!) as TextChannel;\n\t\t\t\tawait offLogs?.send(\n\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\tcontent: `Anti Links has been deactivated by ${interaction.user}!`,\n\t\t\t\t\t\treason: `anti links feature has been deactivated by ${interaction.user.tag}`,\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\t\tawait interaction.editReply({ embeds: [successEmbedBuilder('Anti Links has been turned off!')] });\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],
  "mappings": "AACA,SAAS,qBAAqB,2BAA2B;AACzD,SAAS,qBAAqB,mBAAmB,kBAAkB;AACnE,OAAO,YAAY;AAEnB,qBAAqB,UAAU;AAAA,EAA/B;AACC,gBAAO,IAAI,oBAAoB,EAC7B,QAAQ,WAAW,EACnB,eAAe,+EAA+E,EAC9F,4BAA4B,oBAAoB,aAAa,EAC7D,cAAc,gBAAc,WAAW,QAAQ,IAAI,EAAE,eAAe,qBAAqB,CAAC,EAC1F,cAAc,gBAAc,WAAW,QAAQ,KAAK,EAAE,eAAe,sBAAsB,CAAC;AAAA;AAAA,EAE9F,MAAM,IAAI,aAA0C;AAbrD;AAcE,QAAI,CAAC,YAAY,QAAQ,GAAG;AAC3B,YAAM,YAAY,MAAM,EAAE,QAAQ,CAAC,kBAAkB,2CAA2C,CAAC,EAAE,CAAC;AACpG;AAAA,IACD;AAEA,UAAM,YAAY,WAAW,EAAE,WAAW,KAAK,CAAC;AAEhD,YAAQ,YAAY,QAAQ,cAAc,GAAG;AAAA,MAC5C,KAAK;AACJ,cAAM,UAAU,MAAM,OAAO,MAAM,OAAO;AAAA,UACzC,OAAO,EAAE,OAAO,YAAY,QAAS;AAAA,UACrC,QAAQ,EAAE,WAAW,KAAK;AAAA,UAC1B,QAAQ,EAAE,WAAW,MAAM,OAAO,YAAY,QAAS;AAAA,QACxD,CAAC;AAED,cAAM,YAAY,UAAU,EAAE,QAAQ,CAAC,oBAAoB,gCAAgC,CAAC,EAAE,CAAC;AAE/F,cAAM,UAAS,iBAAY,UAAZ,mBAAmB,SAAS,MAAM,IAAI,mCAAS;AAC9D,eAAM,iCAAQ;AAAA,UACb,WAAW;AAAA,YACV,QAAQ,YAAY;AAAA,YACpB,SAAS,oCAAoC,YAAY;AAAA,YACzD,QAAQ,4CAA4C,YAAY,KAAK;AAAA,UACtE,CAAC;AAAA;AAEF;AAAA,MAED,KAAK;AACJ,cAAM,WAAW,MAAM,OAAO,MAAM,OAAO;AAAA,UAC1C,OAAO,EAAE,OAAO,YAAY,QAAS;AAAA,UACrC,QAAQ,EAAE,WAAW,MAAM;AAAA,UAC3B,QAAQ,EAAE,WAAW,OAAO,OAAO,YAAY,QAAS;AAAA,QACzD,CAAC;AAED,cAAM,WAAU,iBAAY,UAAZ,mBAAmB,SAAS,MAAM,IAAI,qCAAU;AAChE,eAAM,mCAAS;AAAA,UACd,WAAW;AAAA,YACV,QAAQ,YAAY;AAAA,YACpB,SAAS,sCAAsC,YAAY;AAAA,YAC3D,QAAQ,8CAA8C,YAAY,KAAK;AAAA,UACxE,CAAC;AAAA;AAGF,cAAM,YAAY,UAAU,EAAE,QAAQ,CAAC,oBAAoB,iCAAiC,CAAC,EAAE,CAAC;AAChG;AAAA,IACF;AAAA,EACD;AACD;",
  "names": []
}
