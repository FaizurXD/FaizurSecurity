{
  "version": 3,
  "sources": ["../../commands/antiraid.ts"],
  "sourcesContent": ["import type { ChatInputCommandInteraction, GuildMember, TextChannel } from 'discord.js';\nimport { SlashCommandBuilder, PermissionFlagsBits } from 'discord.js';\nimport { defaultError, successEmbedBuilder, errorEmbedBuilder, logBuilder } from '../utils.js';\nimport prisma from '../database.js';\n\nexport default class AntiRaid {\n\tdata = new SlashCommandBuilder()\n\t\t.setName('antiraid')\n\t\t.setDescription('Turn on the anti raid feature')\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand(subcommand => subcommand.setName('on').setDescription('Turn on anti raid!'))\n\t\t.addSubcommand(subcommand => subcommand.setName('off').setDescription('Turn off anti raid!'));\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\ttry {\n\t\t\tif (!interaction.inGuild()) {\n\t\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder('This command can only be run on a server!')] });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait interaction.deferReply({ ephemeral: true });\n\t\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\t\tcase 'on':\n\t\t\t\t\tconst onGuild = await prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId! },\n\t\t\t\t\t\tupdate: { antiRaid: true },\n\t\t\t\t\t\tcreate: { guild: interaction.guildId!, antiRaid: true },\n\t\t\t\t\t});\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [successEmbedBuilder(`anti raid has been activated successfully!`)],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst onLogs = interaction.guild?.channels.cache.get(onGuild?.logs!) as TextChannel;\n\t\t\t\t\tawait onLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\tcontent: `Anti Raid has been activated by ${interaction.user}!`,\n\t\t\t\t\t\t\treason: `anti raid features have been activated by ${interaction.user.tag}`,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'off':\n\t\t\t\t\tconst offGuild = await prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId! },\n\t\t\t\t\t\tupdate: { antiRaid: false },\n\t\t\t\t\t\tcreate: { guild: interaction.guildId!, antiRaid: false },\n\t\t\t\t\t});\n\n\t\t\t\t\tconst offLogs = interaction.guild?.channels.cache.get(offGuild?.logs!) as TextChannel;\n\t\t\t\t\tawait offLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\tcontent: `Anti Raid has been deactivated by ${interaction.user}!`,\n\t\t\t\t\t\t\treason: `anti raid features have been deactivated by ${interaction.user.tag}`,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [successEmbedBuilder(`anti raid has been deactivated successfully!`)],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} catch {\n\t\t\tawait interaction.editReply(defaultError);\n\t\t}\n\t}\n}\n"],
  "mappings": "AACA,SAAS,qBAAqB,2BAA2B;AACzD,SAAS,cAAc,qBAAqB,mBAAmB,kBAAkB;AACjF,OAAO,YAAY;AAEnB,qBAAqB,SAAS;AAAA,EAA9B;AACC,gBAAO,IAAI,oBAAoB,EAC7B,QAAQ,UAAU,EAClB,eAAe,+BAA+B,EAC9C,4BAA4B,oBAAoB,aAAa,EAC7D,cAAc,gBAAc,WAAW,QAAQ,IAAI,EAAE,eAAe,oBAAoB,CAAC,EACzF,cAAc,gBAAc,WAAW,QAAQ,KAAK,EAAE,eAAe,qBAAqB,CAAC;AAAA;AAAA,EAE7F,MAAM,IAAI,aAA0C;AAbrD;AAcE,QAAI;AACH,UAAI,CAAC,YAAY,QAAQ,GAAG;AAC3B,cAAM,YAAY,MAAM,EAAE,QAAQ,CAAC,kBAAkB,2CAA2C,CAAC,EAAE,CAAC;AACpG;AAAA,MACD;AAEA,YAAM,YAAY,WAAW,EAAE,WAAW,KAAK,CAAC;AAChD,cAAQ,YAAY,QAAQ,cAAc,GAAG;AAAA,QAC5C,KAAK;AACJ,gBAAM,UAAU,MAAM,OAAO,MAAM,OAAO;AAAA,YACzC,OAAO,EAAE,OAAO,YAAY,QAAS;AAAA,YACrC,QAAQ,EAAE,UAAU,KAAK;AAAA,YACzB,QAAQ,EAAE,OAAO,YAAY,SAAU,UAAU,KAAK;AAAA,UACvD,CAAC;AACD,gBAAM,YAAY,UAAU;AAAA,YAC3B,QAAQ,CAAC,oBAAoB,4CAA4C,CAAC;AAAA,UAC3E,CAAC;AAED,gBAAM,UAAS,iBAAY,UAAZ,mBAAmB,SAAS,MAAM,IAAI,mCAAS;AAC9D,iBAAM,iCAAQ;AAAA,YACb,WAAW;AAAA,cACV,QAAQ,YAAY;AAAA,cACpB,SAAS,mCAAmC,YAAY;AAAA,cACxD,QAAQ,6CAA6C,YAAY,KAAK;AAAA,YACvE,CAAC;AAAA;AAEF;AAAA,QAED,KAAK;AACJ,gBAAM,WAAW,MAAM,OAAO,MAAM,OAAO;AAAA,YAC1C,OAAO,EAAE,OAAO,YAAY,QAAS;AAAA,YACrC,QAAQ,EAAE,UAAU,MAAM;AAAA,YAC1B,QAAQ,EAAE,OAAO,YAAY,SAAU,UAAU,MAAM;AAAA,UACxD,CAAC;AAED,gBAAM,WAAU,iBAAY,UAAZ,mBAAmB,SAAS,MAAM,IAAI,qCAAU;AAChE,iBAAM,mCAAS;AAAA,YACd,WAAW;AAAA,cACV,QAAQ,YAAY;AAAA,cACpB,SAAS,qCAAqC,YAAY;AAAA,cAC1D,QAAQ,+CAA+C,YAAY,KAAK;AAAA,YACzE,CAAC;AAAA;AAGF,gBAAM,YAAY,UAAU;AAAA,YAC3B,QAAQ,CAAC,oBAAoB,8CAA8C,CAAC;AAAA,UAC7E,CAAC;AACD;AAAA,MACF;AAAA,IACD,QAAE;AACD,YAAM,YAAY,UAAU,YAAY;AAAA,IACzC;AAAA,EACD;AACD;",
  "names": []
}
