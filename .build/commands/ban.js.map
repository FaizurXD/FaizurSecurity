{
  "version": 3,
  "sources": ["../../commands/ban.ts"],
  "sourcesContent": ["import type { ChatInputCommandInteraction, GuildMember, TextChannel } from 'discord.js';\nimport { SlashCommandBuilder, PermissionFlagsBits } from 'discord.js';\nimport { errorEmbedBuilder, successEmbedBuilder, logBuilder } from '../utils.js';\nimport prisma from '../database.js';\n\nexport default class Ban {\n\tdata = new SlashCommandBuilder()\n\t\t.setName('ban')\n\t\t.setDescription('Bans a user from the server.')\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.BanMembers)\n\t\t.addUserOption(option => option.setName('user').setDescription('You can pass a mention or an id of a user.').setRequired(true))\n\t\t.addStringOption(option =>\n\t\t\toption.setName('reason').setDescription('You can pass a string with a reason for banning the user of the server.').setRequired(true)\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder('This command can only be run on a server!')] });\n\t\t\treturn;\n\t\t}\n\n\t\tconst member = interaction.options.getMember('user') as GuildMember;\n\t\tconst reason = interaction.options.getString('reason', true);\n\n\t\tif (!interaction.guild?.members?.me?.permissions?.has(PermissionFlagsBits.BanMembers)) {\n\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder(\"The bot doesn't have permissions to ban members!\")], ephemeral: true });\n\t\t\treturn;\n\t\t}\n\n\t\tif (!member) {\n\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder('Member could not be found!')], ephemeral: true });\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait member.ban({ reason });\n\t\t} catch {\n\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder('Cannot ban this member!')], ephemeral: true });\n\t\t\treturn;\n\t\t}\n\n\t\tawait interaction.reply({ embeds: [successEmbedBuilder(`${member.user} was banned from the server for ${reason}`)], ephemeral: true });\n\n\t\tconst guild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: interaction.guildId },\n\t\t\tselect: { logs: true },\n\t\t});\n\n\t\tconst logs = interaction.guild.channels.cache.get(guild?.logs!) as TextChannel;\n\t\tawait logs?.send(\n\t\t\tlogBuilder({\n\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\tcontent: `${member.user} has been banned by ${interaction.user}!`,\n\t\t\t\treason,\n\t\t\t})\n\t\t);\n\t}\n}\n"],
  "mappings": "AACA,SAAS,qBAAqB,2BAA2B;AACzD,SAAS,mBAAmB,qBAAqB,kBAAkB;AACnE,OAAO,YAAY;AAEnB,qBAAqB,IAAI;AAAA,EAAzB;AACC,gBAAO,IAAI,oBAAoB,EAC7B,QAAQ,KAAK,EACb,eAAe,8BAA8B,EAC7C,4BAA4B,oBAAoB,UAAU,EAC1D,cAAc,YAAU,OAAO,QAAQ,MAAM,EAAE,eAAe,4CAA4C,EAAE,YAAY,IAAI,CAAC,EAC7H;AAAA,MAAgB,YAChB,OAAO,QAAQ,QAAQ,EAAE,eAAe,yEAAyE,EAAE,YAAY,IAAI;AAAA,IACpI;AAAA;AAAA,EAED,MAAM,IAAI,aAA0C;AAfrD;AAgBE,QAAI,CAAC,YAAY,QAAQ,GAAG;AAC3B,YAAM,YAAY,MAAM,EAAE,QAAQ,CAAC,kBAAkB,2CAA2C,CAAC,EAAE,CAAC;AACpG;AAAA,IACD;AAEA,UAAM,SAAS,YAAY,QAAQ,UAAU,MAAM;AACnD,UAAM,SAAS,YAAY,QAAQ,UAAU,UAAU,IAAI;AAE3D,QAAI,GAAC,mCAAY,UAAZ,mBAAmB,YAAnB,mBAA4B,OAA5B,mBAAgC,gBAAhC,mBAA6C,IAAI,oBAAoB,cAAa;AACtF,YAAM,YAAY,MAAM,EAAE,QAAQ,CAAC,kBAAkB,kDAAkD,CAAC,GAAG,WAAW,KAAK,CAAC;AAC5H;AAAA,IACD;AAEA,QAAI,CAAC,QAAQ;AACZ,YAAM,YAAY,MAAM,EAAE,QAAQ,CAAC,kBAAkB,4BAA4B,CAAC,GAAG,WAAW,KAAK,CAAC;AACtG;AAAA,IACD;AAEA,QAAI;AACH,YAAM,OAAO,IAAI,EAAE,OAAO,CAAC;AAAA,IAC5B,QAAE;AACD,YAAM,YAAY,MAAM,EAAE,QAAQ,CAAC,kBAAkB,yBAAyB,CAAC,GAAG,WAAW,KAAK,CAAC;AACnG;AAAA,IACD;AAEA,UAAM,YAAY,MAAM,EAAE,QAAQ,CAAC,oBAAoB,GAAG,OAAO,uCAAuC,QAAQ,CAAC,GAAG,WAAW,KAAK,CAAC;AAErI,UAAM,QAAQ,MAAM,OAAO,MAAM,WAAW;AAAA,MAC3C,OAAO,EAAE,OAAO,YAAY,QAAQ;AAAA,MACpC,QAAQ,EAAE,MAAM,KAAK;AAAA,IACtB,CAAC;AAED,UAAM,OAAO,YAAY,MAAM,SAAS,MAAM,IAAI,+BAAO,IAAK;AAC9D,WAAM,6BAAM;AAAA,MACX,WAAW;AAAA,QACV,QAAQ,YAAY;AAAA,QACpB,SAAS,GAAG,OAAO,2BAA2B,YAAY;AAAA,QAC1D;AAAA,MACD,CAAC;AAAA;AAAA,EAEH;AACD;",
  "names": []
}
