{
  "version": 3,
  "sources": ["../../commands/lockdown.ts"],
  "sourcesContent": ["import type { ChatInputCommandInteraction, TextChannel, VoiceChannel } from 'discord.js';\nimport { SlashCommandBuilder, EmbedBuilder, Colors, ButtonBuilder, ActionRowBuilder, ButtonStyle, PermissionFlagsBits } from 'discord.js';\nimport { defaultError, errorEmbedBuilder, successEmbedBuilder } from '../utils.js';\nimport prisma from '../database.js';\n\nexport default class Lockdown {\n\tdata = new SlashCommandBuilder()\n\t\t.setName('lockdown')\n\t\t.setDescription('Lockdown the entire server!')\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand(subcommand => subcommand.setName('on').setDescription('turn the lockdown on!'))\n\t\t.addSubcommand(subcommand => subcommand.setName('off').setDescription('turn the lockdown off!'))\n\t\t.addSubcommand(subcommand =>\n\t\t\tsubcommand\n\t\t\t\t.setName('update')\n\t\t\t\t.setDescription('Post an update on the lockdown!')\n\t\t\t\t.addStringOption(message =>\n\t\t\t\t\tmessage.setName('message').setDescription('The update message that will be posted during lockdown').setRequired(true)\n\t\t\t\t)\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder('This command can only be run on a server!')] });\n\t\t\treturn;\n\t\t}\n\n\t\tconst tempGuild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: interaction.guildId! },\n\t\t\tselect: { owners: true },\n\t\t});\n\n\t\tif (!(tempGuild?.owners.includes(interaction.user.id) || interaction.guild?.ownerId === interaction.user.id)) {\n\t\t\tawait interaction.reply({ embeds: [errorEmbedBuilder('Only an owner can use the whitelist.')], ephemeral: true });\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\tcase 'on':\n\t\t\t\tconst confirm = new ActionRowBuilder<ButtonBuilder>({\n\t\t\t\t\tcomponents: [\n\t\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\t\tlabel: 'Continue',\n\t\t\t\t\t\t\tstyle: ButtonStyle.Primary,\n\t\t\t\t\t\t\tcustom_id: 'lockdown_continue',\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\t\tlabel: 'Cancel',\n\t\t\t\t\t\t\tstyle: ButtonStyle.Danger,\n\t\t\t\t\t\t\tcustom_id: 'lockdown_cancel',\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t});\n\n\t\t\t\tconst lockdownOnEmbed = new EmbedBuilder({\n\t\t\t\t\ttitle: 'Are you sure you want to procced?',\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: '<:warn:1009191992040894657> Warning!',\n\t\t\t\t\t\t\tvalue:\n\t\t\t\t\t\t\t\t\"<:1412reply:1009087336828649533> The lockdown goes through the entire server and lock every channel and remove all role permissions, and no new members will be able to enter your server while it's on!\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tcolor: Colors.Blurple,\n\t\t\t\t});\n\t\t\t\tawait interaction.reply({ embeds: [lockdownOnEmbed], components: [confirm], ephemeral: true });\n\t\t\t\tbreak;\n\n\t\t\tcase 'off':\n\t\t\t\ttry {\n\t\t\t\t\tawait interaction.deferReply({ ephemeral: true });\n\t\t\t\t\tconst guild = await prisma.guild.findUnique({\n\t\t\t\t\t\twhere: { guild: interaction.guildId! },\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tlockdownChannel: true,\n\t\t\t\t\t\t\tverificationChannel: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!guild?.lockdownChannel) {\n\t\t\t\t\t\tawait interaction.editReply({ embeds: [errorEmbedBuilder('Lockdown has not been activated in this server!')] });\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst lockdownChannel = await interaction.guild?.channels.fetch(guild?.lockdownChannel);\n\t\t\t\t\tawait lockdownChannel?.delete('Lockdown has been turned off');\n\n\t\t\t\t\tawait prisma.guild.update({\n\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\tguild: interaction.guildId!,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\traidMode: false,\n\t\t\t\t\t\t\tlockdownChannel: null,\n\t\t\t\t\t\t\tlockdownMessage: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tinteraction.guild?.channels.cache.forEach(ch => {\n\t\t\t\t\t\tconst c = ch as TextChannel | VoiceChannel;\n\t\t\t\t\t\tinteraction.guild?.roles.cache\n\t\t\t\t\t\t\t.filter(role => role.id !== '@everyone' && role.id !== guild?.verificationChannel)\n\t\t\t\t\t\t\t.forEach(async role => await c.permissionOverwrites.edit(role.id, { SendMessages: true }));\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({ embeds: [successEmbedBuilder(`Lockdown is now off.`)] });\n\t\t\t\t} catch {\n\t\t\t\t\tawait interaction.editReply(defaultError);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'update':\n\t\t\t\tconst content = interaction.options.getString('message');\n\n\t\t\t\tawait interaction.deferReply({ ephemeral: true });\n\n\t\t\t\ttry {\n\t\t\t\t\tconst guild = await prisma.guild.findUnique({\n\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\tguild: interaction.guildId!,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tlockdownMessage: true,\n\t\t\t\t\t\t\tlockdownChannel: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!(guild?.lockdownChannel || guild?.lockdownMessage)) {\n\t\t\t\t\t\tawait interaction.editReply({ embeds: [errorEmbedBuilder('lockdown has not been activated in this server!')] });\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst channel = interaction.guild?.channels.cache.get(guild?.lockdownChannel!) as TextChannel | VoiceChannel | null;\n\t\t\t\t\tconst message = await channel?.messages?.fetch(guild?.lockdownMessage!);\n\n\t\t\t\t\tconst embed = message?.embeds[0];\n\n\t\t\t\t\tconst newEmbed = { ...embed?.data };\n\t\t\t\t\tnewEmbed.fields ??= [];\n\t\t\t\t\tnewEmbed.fields.push({\n\t\t\t\t\t\tname: `<:arrow:1009057573590290452> Update #${(embed?.fields?.length ?? 0) + 1}`,\n\t\t\t\t\t\tvalue: `<:1412reply:1009087336828649533> ${content}`,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait message?.edit({ embeds: [newEmbed] });\n\t\t\t\t} catch {\n\t\t\t\t\tawait interaction.editReply(defaultError);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tawait interaction.editReply({ embeds: [successEmbedBuilder(`Successfully posted the lockdown update!`)] });\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["_a"]
}
