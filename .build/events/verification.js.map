{
  "version": 3,
  "sources": ["../../events/verification.ts"],
  "sourcesContent": ["import type { GuildMemberRoleManager, Interaction, Message, GuildMember, TextChannel } from 'discord.js';\nimport { Events, AttachmentBuilder, EmbedBuilder, Colors, ActionRowBuilder, ButtonBuilder, ButtonStyle } from 'discord.js';\nimport { CaptchaGenerator } from 'captcha-canvas';\nimport { successEmbedBuilder, errorEmbedBuilder } from '../utils.js';\nimport prisma from '../database.js';\n\nexport default class Verification {\n\tname = Events.InteractionCreate;\n\n\tasync verify(text: string, interaction: Interaction, msg: Message, guild: { members: string | null } | null) {\n\t\ttry {\n\t\t\tconst messages = await msg.channel.awaitMessages({ max: 1, time: 10_000, errors: ['time'] });\n\n\t\t\tconst roles = interaction.member?.roles as GuildMemberRoleManager | null;\n\n\t\t\tif (messages.first()?.content === text) {\n\t\t\t\tawait msg.channel.send({ embeds: [successEmbedBuilder('You have been verified successfully, you can now continue to the server!')] });\n\t\t\t\tconst role = interaction.guild?.roles.cache.get(guild?.members!);\n\t\t\t\tawait roles?.add(role!);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { message: incorrectEmbed, text: incorrectText } = await this.embedBuilder();\n\n\t\t\tawait msg.edit(incorrectEmbed);\n\t\t\tawait this.verify(incorrectText, interaction, msg, guild);\n\t\t} catch {\n\t\t\tconst { message: timeOutEmbed, text: timeOutText } = await this.embedBuilder();\n\n\t\t\tawait msg.edit(timeOutEmbed);\n\t\t\tawait this.verify(timeOutText, interaction, msg, guild);\n\t\t}\n\t}\n\n\tasync embedBuilder() {\n\t\tconst captcha = new CaptchaGenerator({ width: 450, height: 150 })\n\n\t\tconst buffer = await captcha.generate();\n\n\t\tconst file = new AttachmentBuilder(buffer, { name: 'verification.png' });\n\t\tconst verificationEmbed = new EmbedBuilder({\n\t\t\ttitle: '<:check:1027354811164786739> Verification',\n\t\t\tdescription: `<:1412reply:1009087336828649533> Are you a human? Lets find out. Simply type the following captcha below so I can verify that you are human. The captcha will only last 10 seconds so be quick!`,\n\t\t\timage: {\n\t\t\t\turl: 'attachment://verification.png',\n\t\t\t},\n\t\t\tcolor: Colors.Green,\n\t\t});\n\n\t\treturn {\n\t\t\tmessage: { embeds: [verificationEmbed], files: [file] },\n\t\t\ttext: captcha.text!,\n\t\t};\n\t}\n\n\tasync run(interaction: Interaction) {\n\t\tif (!interaction.inGuild()) return;\n\n\t\tif (!interaction.isButton()) return;\n\t\tif (interaction.customId !== 'verify') return;\n\n\t\tawait interaction.deferReply({ ephemeral: true });\n\n\t\tconst guild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: interaction.guildId },\n\t\t\tselect: { members: true, logs: true },\n\t\t});\n\n\t\tconst user = await prisma.user.findUnique({\n\t\t\twhere: { user: interaction.user.id },\n\t\t\tselect: { toxicity: true, reports: true },\n\t\t});\n\n\t\tif ((user?.toxicity ?? 0) >= 90) {\n\t\t\tawait interaction.editReply({\n\t\t\t\tembeds: [errorEmbedBuilder('You have been detected as a dangerous user. Please wait until an admin verifies you.')],\n\t\t\t});\n\n\t\t\tconst embed = new EmbedBuilder({\n\t\t\t\ttitle: '<:warn:1009191992040894657> Toxic User Detected!',\n\t\t\t\tdescription: `${interaction.user} has a estimate toxicity of **${user?.toxicity ?? 0}%**, and **${user?.reports?.length ?? 0} reports.**\n<:blank:1008721958210383902> <:arrow:1009057573590290452> What would you like to proceed with? \n<:blank:1008721958210383902> <:arrow:1009057573590290452> **Verification was attempted:** <t:${Math.floor(Date.now() / 1000)}:R>`,\n\t\t\t\tcolor: Colors.Blurple,\n\t\t\t\tthumbnail: {\n\t\t\t\t\turl: interaction.user.displayAvatarURL(),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\tconst options = new ActionRowBuilder<ButtonBuilder>({\n\t\t\t\tcomponents: [\n\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\tcustom_id: `verify_toxic-${interaction.user.id}`,\n\t\t\t\t\t\tlabel: 'Verify',\n\t\t\t\t\t\tstyle: ButtonStyle.Primary,\n\t\t\t\t\t}),\n\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\tcustom_id: `kick_toxic-${interaction.user.id}`,\n\t\t\t\t\t\tlabel: 'Kick',\n\t\t\t\t\t\tstyle: ButtonStyle.Success,\n\t\t\t\t\t}),\n\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\tcustom_id: `ban_toxic-${interaction.user.id}`,\n\t\t\t\t\t\tlabel: 'Ban',\n\t\t\t\t\t\tstyle: ButtonStyle.Danger,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tconst logs = interaction.guild?.channels.cache.get(guild?.logs!) as TextChannel;\n\t\t\tawait logs?.send({ embeds: [embed], components: [options] });\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ((interaction.member?.roles as GuildMemberRoleManager).cache.has(guild?.members!)) {\n\t\t\tawait interaction.editReply({ embeds: [errorEmbedBuilder('You are already verified!')] });\n\t\t\treturn;\n\t\t}\n\n\t\tawait interaction.editReply({ embeds: [successEmbedBuilder('Follow instructions on DMs')] });\n\n\t\tconst { message: initialEmbed, text: initialText } = await this.embedBuilder();\n\t\tconst msg = await (interaction.member as GuildMember | null)?.send(initialEmbed).catch(async () => {\n\t\t\tawait interaction.editReply('You must activate DMs to verify.');\n\t\t\treturn;\n\t\t});\n\n\t\tif (!msg) return;\n\n\t\tthis.verify(initialText, interaction, msg!, guild);\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
