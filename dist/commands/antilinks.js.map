{
  "version": 3,
  "sources": ["../../commands/antilinks.ts"],
  "sourcesContent": ["import type {\n\tChatInputCommandInteraction,\n\tGuildMember,\n\tTextChannel,\n} from \"discord.js\";\nimport { SlashCommandBuilder, PermissionFlagsBits } from \"discord.js\";\nimport {\n\tsuccessEmbedBuilder,\n\terrorEmbedBuilder,\n\tlogBuilder,\n} from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class AntiLinks {\n\tdata = new SlashCommandBuilder()\n\t\t.setName(\"antilinks\")\n\t\t.setDescription(\n\t\t\t\"Toggle Anti Links in your server (this will block every self promotion link)!\",\n\t\t)\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand.setName(\"on\").setDescription(\"turn anti links on!\"),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand.setName(\"off\").setDescription(\"turn anti links off!\"),\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t],\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tawait interaction.deferReply({ ephemeral: true });\n\n\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\tcase \"on\":\n\t\t\t\tconst onGuild = await prisma.guild.upsert({\n\t\t\t\t\twhere: { guild: interaction.guildId ?? \"\" },\n\t\t\t\t\tupdate: { antiLinks: true },\n\t\t\t\t\tcreate: { antiLinks: true, guild: interaction.guildId ?? \"\" },\n\t\t\t\t});\n\n\t\t\t\tawait interaction.editReply({\n\t\t\t\t\tembeds: [successEmbedBuilder(\"Anti Links has been turned on!\")],\n\t\t\t\t});\n\n\t\t\t\tconst onLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\tonGuild?.logs ?? \"\",\n\t\t\t\t) as TextChannel;\n\t\t\t\tawait onLogs?.send(\n\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\treason: `anti links feature has been activated by ${interaction.user.tag}`,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"off\":\n\t\t\t\tconst offGuild = await prisma.guild.upsert({\n\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\tupdate: { antiLinks: false },\n\t\t\t\t\tcreate: { antiLinks: false, guild: interaction.guildId },\n\t\t\t\t});\n\n\t\t\t\tconst offLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\toffGuild?.logs ?? \"\",\n\t\t\t\t) as TextChannel;\n\t\t\t\tawait offLogs?.send(\n\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\treason: `anti links feature has been deactivated by ${interaction.user.tag}`,\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\tawait interaction.editReply({\n\t\t\t\t\tembeds: [successEmbedBuilder(\"Anti Links has been turned off!\")],\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],
  "mappings": ";AAKA,SAAS,qBAAqB,2BAA2B;AACzD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,OAAO,YAAY;AAEnB,qBAAqB,UAAU;AAAA,EAC9B,OAAO,IAAI,oBAAoB,EAC7B,QAAQ,WAAW,EACnB;AAAA,IACA;AAAA,EACD,EACC,4BAA4B,oBAAoB,aAAa,EAC7D;AAAA,IAAc,CAAC,eACf,WAAW,QAAQ,IAAI,EAAE,eAAe,qBAAqB;AAAA,EAC9D,EACC;AAAA,IAAc,CAAC,eACf,WAAW,QAAQ,KAAK,EAAE,eAAe,sBAAsB;AAAA,EAChE;AAAA,EAED,MAAM,IAAI,aAA0C;AA3BrD;AA4BE,QAAI,CAAC,YAAY,QAAQ,GAAG;AAC3B,YAAM,YAAY,MAAM;AAAA,QACvB,QAAQ;AAAA,UACP,kBAAkB,2CAA2C;AAAA,QAC9D;AAAA,MACD,CAAC;AACD;AAAA,IACD;AAEA,UAAM,YAAY,WAAW,EAAE,WAAW,KAAK,CAAC;AAEhD,YAAQ,YAAY,QAAQ,cAAc,GAAG;AAAA,MAC5C,KAAK;AACJ,cAAM,UAAU,MAAM,OAAO,MAAM,OAAO;AAAA,UACzC,OAAO,EAAE,OAAO,YAAY,WAAW,GAAG;AAAA,UAC1C,QAAQ,EAAE,WAAW,KAAK;AAAA,UAC1B,QAAQ,EAAE,WAAW,MAAM,OAAO,YAAY,WAAW,GAAG;AAAA,QAC7D,CAAC;AAED,cAAM,YAAY,UAAU;AAAA,UAC3B,QAAQ,CAAC,oBAAoB,gCAAgC,CAAC;AAAA,QAC/D,CAAC;AAED,cAAM,UAAS,iBAAY,UAAZ,mBAAmB,SAAS,MAAM;AAAA,WAChD,mCAAS,SAAQ;AAAA;AAElB,eAAM,iCAAQ;AAAA,UACb,WAAW;AAAA,YACV,QAAQ,YAAY;AAAA,YACpB,QAAQ,4CAA4C,YAAY,KAAK,GAAG;AAAA,UACzE,CAAC;AAAA;AAEF;AAAA,MAED,KAAK;AACJ,cAAM,WAAW,MAAM,OAAO,MAAM,OAAO;AAAA,UAC1C,OAAO,EAAE,OAAO,YAAY,QAAQ;AAAA,UACpC,QAAQ,EAAE,WAAW,MAAM;AAAA,UAC3B,QAAQ,EAAE,WAAW,OAAO,OAAO,YAAY,QAAQ;AAAA,QACxD,CAAC;AAED,cAAM,WAAU,iBAAY,UAAZ,mBAAmB,SAAS,MAAM;AAAA,WACjD,qCAAU,SAAQ;AAAA;AAEnB,eAAM,mCAAS;AAAA,UACd,WAAW;AAAA,YACV,QAAQ,YAAY;AAAA,YACpB,QAAQ,8CAA8C,YAAY,KAAK,GAAG;AAAA,UAC3E,CAAC;AAAA;AAGF,cAAM,YAAY,UAAU;AAAA,UAC3B,QAAQ,CAAC,oBAAoB,iCAAiC,CAAC;AAAA,QAChE,CAAC;AACD;AAAA,IACF;AAAA,EACD;AACD;",
  "names": []
}
