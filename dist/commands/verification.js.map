{
  "version": 3,
  "sources": ["../../commands/verification.ts"],
  "sourcesContent": ["import type {\n\tChatInputCommandInteraction,\n\tGuildMember,\n\tTextChannel,\n\tVoiceChannel,\n} from \"discord.js\";\nimport {\n\tSlashCommandBuilder,\n\tEmbedBuilder,\n\tActionRowBuilder,\n\tButtonBuilder,\n\tButtonStyle,\n\tPermissionFlagsBits,\n\tChannelType,\n} from \"discord.js\";\nimport {\n\tdefaultError,\n\terrorEmbedBuilder,\n\tlogBuilder,\n\tsuccessEmbedBuilder,\n\tgetQuarantine,\n} from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class Verification {\n\tdata = new SlashCommandBuilder()\n\t\t.setName(\"verification\")\n\t\t.setNameLocalizations({ \"es-ES\": \"verificaci\u00F3n\" })\n\t\t.setDescription(\"Configure verification in your server!\")\n\t\t.setDescriptionLocalizations({\n\t\t\t\"es-ES\": \"\u00A1Configura la verificaci\u00F3n en tu servidor!\",\n\t\t})\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"on\")\n\t\t\t\t.setNameLocalizations({ \"es-ES\": \"en\" })\n\t\t\t\t.setDescription(\n\t\t\t\t\t\"Turn on verification and post embed in the specified channel!\",\n\t\t\t\t)\n\t\t\t\t.setDescriptionLocalizations({\n\t\t\t\t\t\"es-ES\":\n\t\t\t\t\t\t'\u00A1Enciende la verificaci\u00F3n y publica el \"embed\" en el canal especificado!',\n\t\t\t\t})\n\t\t\t\t.addChannelOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"channel\")\n\t\t\t\t\t\t.setNameLocalizations({ \"es-ES\": \"canal\" })\n\t\t\t\t\t\t.setDescription(\"The verification channel\")\n\t\t\t\t\t\t.setDescriptionLocalizations({\n\t\t\t\t\t\t\t\"es-ES\": \"El canal de verificaci\u00F3n\",\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"off\")\n\t\t\t\t.setNameLocalizations({ \"es-ES\": \"apagada\" })\n\t\t\t\t.setDescription(\"Turn off verification.\")\n\t\t\t\t.setDescriptionLocalizations({ \"es-ES\": \"Apagar la verificaci\u00F3n\" }),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"role\")\n\t\t\t\t.setNameLocalizations({ \"es-ES\": \"rol\" })\n\t\t\t\t.setDescription(\"Set the role to be assigned once verified\")\n\t\t\t\t.setDescriptionLocalizations({\n\t\t\t\t\t\"es-ES\": \"Configura el rol que debe ser asignado una vez verificado!\",\n\t\t\t\t})\n\t\t\t\t.addRoleOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"role\")\n\t\t\t\t\t\t.setNameLocalizations({ \"es-ES\": \"rol\" })\n\t\t\t\t\t\t.setDescription(\"role to be assigned once verified\")\n\t\t\t\t\t\t.setDescriptionLocalizations({\n\t\t\t\t\t\t\t\"es-ES\": \"rol que debe ser asignado una vez verificado\",\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"removerole\")\n\t\t\t\t.setNameLocalizations({ \"es-ES\": \"eliminar-rol\" })\n\t\t\t\t.setDescription(\"Remove the role to be assigned once verified\")\n\t\t\t\t.setDescriptionLocalizations({\n\t\t\t\t\t\"es-ES\": \"Eliminar el role que debe ser asignado una vez verificado\",\n\t\t\t\t}),\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t],\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tawait interaction.deferReply({ ephemeral: true });\n\t\ttry {\n\t\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\t\tcase \"on\":\n\t\t\t\t\tconst channel = interaction.options.getChannel(\n\t\t\t\t\t\t\"channel\",\n\t\t\t\t\t) as TextChannel;\n\n\t\t\t\t\tif (channel?.type !== ChannelType.GuildText) {\n\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\t\terrorEmbedBuilder(\"The channel must be a Text Channel.\"),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// rome-ignore lint/style/noNonNullAssertion: Guild will always be defined, since this command doesn't allow you to run it in anything other than a guild.\n\t\t\t\t\tconst quarantine = await getQuarantine(interaction.guild!);\n\n\t\t\t\t\tinteraction.guild?.channels.cache.forEach(async (ch) => {\n\t\t\t\t\t\tconst c = ch as TextChannel | VoiceChannel;\n\t\t\t\t\t\tawait c.permissionOverwrites?.edit(quarantine, {\n\t\t\t\t\t\t\tViewChannel: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tchannel.permissionOverwrites.edit(quarantine, {\n\t\t\t\t\t\tViewChannel: true,\n\t\t\t\t\t\tSendMessages: false,\n\t\t\t\t\t});\n\t\t\t\t\tchannel.permissionOverwrites.edit(interaction.guildId, {\n\t\t\t\t\t\tViewChannel: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tconst verificationButtons = new ActionRowBuilder<ButtonBuilder>({\n\t\t\t\t\t\tcomponents: [\n\t\t\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\t\t\tlabel: \"Verify\",\n\t\t\t\t\t\t\t\tstyle: ButtonStyle.Success,\n\t\t\t\t\t\t\t\tcustom_id: \"verify\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\t\t\tlabel: \"Help\",\n\t\t\t\t\t\t\t\tstyle: ButtonStyle.Link,\n\t\t\t\t\t\t\t\turl: \"https://discord.gg/NxJzWWqhdQ\",\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst verificationEmbed = new EmbedBuilder({\n\t\t\t\t\t\ttitle: \"<:check:1027354811164786739> Verification\",\n\t\t\t\t\t\tdescription: `<:blank:1008721958210383902> <:arrow:1068604670764916876> To access \\`${interaction.guild?.name}\\` you must complete the verification process. \\n<:blank:1008721958210383902><:blank:1008721958210383902><:reply:1067159718646263910> Press on the **Verify** button below.`,\n\t\t\t\t\t\tcolor: 0x2b2d31,\n\t\t\t\t\t});\n\n\t\t\t\t\tawait channel.send({\n\t\t\t\t\t\tembeds: [verificationEmbed],\n\t\t\t\t\t\tcomponents: [verificationButtons],\n\t\t\t\t\t});\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\"Successfully activated verification!\"),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst guild = await prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { verificationChannel: channel.id },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tverificationChannel: channel.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselect: { logs: true },\n\t\t\t\t\t});\n\n\t\t\t\t\tconst onLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\tguild?.logs ?? \"\",\n\t\t\t\t\t) as TextChannel;\n\t\t\t\t\tonLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\treason: `Verification turned on by ${interaction.user.tag}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"off\":\n\t\t\t\t\tconst tempGuild = await prisma.guild.findUnique({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tselect: { verificationChannel: true, logs: true },\n\t\t\t\t\t});\n\t\t\t\t\tconst tempChannel = interaction.guild?.channels?.cache?.get(\n\t\t\t\t\t\ttempGuild?.verificationChannel ?? \"\",\n\t\t\t\t\t);\n\t\t\t\t\tawait tempChannel?.delete();\n\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { verificationChannel: null },\n\t\t\t\t\t\tcreate: { guild: interaction.guildId },\n\t\t\t\t\t});\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\"Successfully deactivated verification in this server!\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst offLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\ttempGuild?.logs ?? \"\",\n\t\t\t\t\t) as TextChannel;\n\t\t\t\t\toffLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\treason: `Verification turned off by ${interaction.user.tag}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"role\":\n\t\t\t\t\tconst role = interaction.options.getRole(\"role\");\n\n\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { members: role?.id },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tmembers: role?.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t`Successfully set the **Member** role as ${role}`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"removerole\":\n\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { members: null },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tmembers: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\"Successfully removed the **Member** role\"),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tawait interaction.editReply(defaultError);\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["_a"]
}
