{
  "version": 3,
  "sources": ["../../commands/ban.ts"],
  "sourcesContent": ["import type {\n\tChatInputCommandInteraction,\n\tGuildMember,\n\tTextChannel,\n} from \"discord.js\";\nimport { SlashCommandBuilder, PermissionFlagsBits } from \"discord.js\";\nimport {\n\terrorEmbedBuilder,\n\tsuccessEmbedBuilder,\n\twarnEmbedBuilder,\n\tlogBuilder,\n} from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class Ban {\n\tdata = new SlashCommandBuilder()\n\t\t.setName(\"ban\")\n\t\t.setDescription(\"Bans a user from the server.\")\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.BanMembers)\n\t\t.addUserOption((option) =>\n\t\t\toption\n\t\t\t\t.setName(\"user\")\n\t\t\t\t.setDescription(\"You can pass a mention or an id of a user.\")\n\t\t\t\t.setRequired(true),\n\t\t)\n\t\t.addStringOption((option) =>\n\t\t\toption\n\t\t\t\t.setName(\"reason\")\n\t\t\t\t.setDescription(\n\t\t\t\t\t\"You can pass a string with a reason for banning the user of the server.\",\n\t\t\t\t)\n\t\t\t\t.setRequired(true),\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t],\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst member = interaction.options.getMember(\"user\") as GuildMember;\n\t\tconst reason = interaction.options.getString(\"reason\", true);\n\n\t\tif (\n\t\t\t!interaction.guild?.members?.me?.permissions?.has(\n\t\t\t\tPermissionFlagsBits.BanMembers,\n\t\t\t)\n\t\t) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\"The bot doesn't have permissions to ban members!\"),\n\t\t\t\t],\n\t\t\t\tephemeral: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (!member) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [errorEmbedBuilder(\"Member could not be found!\")],\n\t\t\t\tephemeral: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst msg = await member\n\t\t\t.send({\n\t\t\t\tembeds: [\n\t\t\t\t\twarnEmbedBuilder(\n\t\t\t\t\t\t`You have been banned from **${interaction.guild.name}**!`,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t})\n\t\t\t.catch(() => {});\n\n\t\ttry {\n\t\t\tawait member.ban({ reason });\n\t\t} catch {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [errorEmbedBuilder(\"Cannot ban this member!\")],\n\t\t\t\tephemeral: true,\n\t\t\t});\n\t\t\tawait msg?.edit({\n\t\t\t\tembeds: [\n\t\t\t\t\twarnEmbedBuilder(\n\t\t\t\t\t\t`${interaction.user} tried to ban you from **${interaction.guild.name}**!`,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tawait interaction.reply({\n\t\t\tembeds: [\n\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t`${member.user} was banned from the server for ${reason}`,\n\t\t\t\t),\n\t\t\t],\n\t\t\tephemeral: true,\n\t\t});\n\n\t\tconst guild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: interaction.guildId },\n\t\t\tselect: { logs: true },\n\t\t});\n\n\t\tconst logs = interaction.guild.channels.cache.get(\n\t\t\tguild?.logs ?? \"\",\n\t\t) as TextChannel;\n\t\tawait logs?.send(\n\t\t\tlogBuilder({\n\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\treason: `${member.user.tag} banned by ${interaction.user.tag}, reason: ${reason}`,\n\t\t\t}),\n\t\t);\n\t}\n}\n"],
  "mappings": ";AAKA,SAAS,qBAAqB,2BAA2B;AACzD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,OAAO,YAAY;AAEnB,qBAAqB,IAAI;AAAA,EACxB,OAAO,IAAI,oBAAoB,EAC7B,QAAQ,KAAK,EACb,eAAe,8BAA8B,EAC7C,4BAA4B,oBAAoB,UAAU,EAC1D;AAAA,IAAc,CAAC,WACf,OACE,QAAQ,MAAM,EACd,eAAe,4CAA4C,EAC3D,YAAY,IAAI;AAAA,EACnB,EACC;AAAA,IAAgB,CAAC,WACjB,OACE,QAAQ,QAAQ,EAChB;AAAA,MACA;AAAA,IACD,EACC,YAAY,IAAI;AAAA,EACnB;AAAA,EAED,MAAM,IAAI,aAA0C;AAlCrD;AAmCE,QAAI,CAAC,YAAY,QAAQ,GAAG;AAC3B,YAAM,YAAY,MAAM;AAAA,QACvB,QAAQ;AAAA,UACP,kBAAkB,2CAA2C;AAAA,QAC9D;AAAA,MACD,CAAC;AACD;AAAA,IACD;AAEA,UAAM,SAAS,YAAY,QAAQ,UAAU,MAAM;AACnD,UAAM,SAAS,YAAY,QAAQ,UAAU,UAAU,IAAI;AAE3D,QACC,GAAC,mCAAY,UAAZ,mBAAmB,YAAnB,mBAA4B,OAA5B,mBAAgC,gBAAhC,mBAA6C;AAAA,MAC7C,oBAAoB;AAAA,QAEpB;AACD,YAAM,YAAY,MAAM;AAAA,QACvB,QAAQ;AAAA,UACP,kBAAkB,kDAAkD;AAAA,QACrE;AAAA,QACA,WAAW;AAAA,MACZ,CAAC;AACD;AAAA,IACD;AAEA,QAAI,CAAC,QAAQ;AACZ,YAAM,YAAY,MAAM;AAAA,QACvB,QAAQ,CAAC,kBAAkB,4BAA4B,CAAC;AAAA,QACxD,WAAW;AAAA,MACZ,CAAC;AACD;AAAA,IACD;AAEA,UAAM,MAAM,MAAM,OAChB,KAAK;AAAA,MACL,QAAQ;AAAA,QACP;AAAA,UACC,+BAA+B,YAAY,MAAM,IAAI;AAAA,QACtD;AAAA,MACD;AAAA,IACD,CAAC,EACA,MAAM,MAAM;AAAA,IAAC,CAAC;AAEhB,QAAI;AACH,YAAM,OAAO,IAAI,EAAE,OAAO,CAAC;AAAA,IAC5B,QAAQ;AACP,YAAM,YAAY,MAAM;AAAA,QACvB,QAAQ,CAAC,kBAAkB,yBAAyB,CAAC;AAAA,QACrD,WAAW;AAAA,MACZ,CAAC;AACD,aAAM,2BAAK,KAAK;AAAA,QACf,QAAQ;AAAA,UACP;AAAA,YACC,GAAG,YAAY,IAAI,4BAA4B,YAAY,MAAM,IAAI;AAAA,UACtE;AAAA,QACD;AAAA,MACD;AACA;AAAA,IACD;AAEA,UAAM,YAAY,MAAM;AAAA,MACvB,QAAQ;AAAA,QACP;AAAA,UACC,GAAG,OAAO,IAAI,mCAAmC,MAAM;AAAA,QACxD;AAAA,MACD;AAAA,MACA,WAAW;AAAA,IACZ,CAAC;AAED,UAAM,QAAQ,MAAM,OAAO,MAAM,WAAW;AAAA,MAC3C,OAAO,EAAE,OAAO,YAAY,QAAQ;AAAA,MACpC,QAAQ,EAAE,MAAM,KAAK;AAAA,IACtB,CAAC;AAED,UAAM,OAAO,YAAY,MAAM,SAAS,MAAM;AAAA,OAC7C,+BAAO,SAAQ;AAAA,IAChB;AACA,WAAM,6BAAM;AAAA,MACX,WAAW;AAAA,QACV,QAAQ,YAAY;AAAA,QACpB,QAAQ,GAAG,OAAO,KAAK,GAAG,cAAc,YAAY,KAAK,GAAG,aAAa,MAAM;AAAA,MAChF,CAAC;AAAA;AAAA,EAEH;AACD;",
  "names": []
}
