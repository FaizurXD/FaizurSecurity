{
  "version": 3,
  "sources": ["../../commands/antitoxicity.ts"],
  "sourcesContent": ["import type {\n\tChatInputCommandInteraction,\n\tGuildMember,\n\tTextChannel,\n} from \"discord.js\";\nimport { SlashCommandBuilder, PermissionFlagsBits } from \"discord.js\";\nimport {\n\tdefaultError,\n\tsuccessEmbedBuilder,\n\terrorEmbedBuilder,\n\tlogBuilder,\n} from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class AntiToxicity {\n\tdata = new SlashCommandBuilder()\n\t\t.setName(\"antitoxicity\")\n\t\t.setDescription(\n\t\t\t\"Add a toxicity filter to your server to keep a PG-13 environment.\",\n\t\t)\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand.setName(\"on\").setDescription(\"Turn toxicity filter on!\"),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand.setName(\"off\").setDescription(\"Turn toxicity filter off!\"),\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\ttry {\n\t\t\tif (!interaction.inGuild()) {\n\t\t\t\tawait interaction.reply({\n\t\t\t\t\tembeds: [\n\t\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait interaction.deferReply({ ephemeral: true });\n\t\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\t\tcase \"on\":\n\t\t\t\t\tconst onGuild = await prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tselect: { logs: true },\n\t\t\t\t\t\tupdate: { toxicityFilter: true },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\ttoxicityFilter: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\"toxicity filter has been activated successfully!\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst onLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\tonGuild?.logs ?? \"\",\n\t\t\t\t\t) as TextChannel;\n\t\t\t\t\tawait onLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\treason: `anti-toxicity feature has been activated by ${interaction.user.tag}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"off\":\n\t\t\t\t\tconst offGuild = await prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tselect: { logs: true },\n\t\t\t\t\t\tupdate: { toxicityFilter: false },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\ttoxicityFilter: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\"toxicity filter has been deactivated successfully!\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst offLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\toffGuild?.logs ?? \"\",\n\t\t\t\t\t) as TextChannel;\n\t\t\t\t\tawait offLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\treason: `anti-toxicity feature has been deactivated by ${interaction.user.tag}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} catch {\n\t\t\tawait interaction.editReply(defaultError);\n\t\t}\n\t}\n}\n"],
  "mappings": ";AAKA,SAAS,qBAAqB,2BAA2B;AACzD;AAAA,EACC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACM;AACP,OAAO,YAAY;AAEnB,qBAAqB,aAAa;AAAA,EACjC,OAAO,IAAI,oBAAoB,EAC7B,QAAQ,cAAc,EACtB;AAAA,IACA;AAAA,EACD,EACC,4BAA4B,oBAAoB,aAAa,EAC7D;AAAA,IAAc,CAAC,eACf,WAAW,QAAQ,IAAI,EAAE,eAAe,0BAA0B;AAAA,EACnE,EACC;AAAA,IAAc,CAAC,eACf,WAAW,QAAQ,KAAK,EAAE,eAAe,2BAA2B;AAAA,EACrE;AAAA,EAED,MAAM,IAAI,aAA0C;AA5BrD;AA6BE,QAAI;AACH,UAAI,CAAC,YAAY,QAAQ,GAAG;AAC3B,cAAM,YAAY,MAAM;AAAA,UACvB,QAAQ;AAAA,YACP,kBAAkB,2CAA2C;AAAA,UAC9D;AAAA,QACD,CAAC;AACD;AAAA,MACD;AAEA,YAAM,YAAY,WAAW,EAAE,WAAW,KAAK,CAAC;AAChD,cAAQ,YAAY,QAAQ,cAAc,GAAG;AAAA,QAC5C,KAAK;AACJ,gBAAM,UAAU,MAAM,OAAO,MAAM,OAAO;AAAA,YACzC,OAAO,EAAE,OAAO,YAAY,QAAQ;AAAA,YACpC,QAAQ,EAAE,MAAM,KAAK;AAAA,YACrB,QAAQ,EAAE,gBAAgB,KAAK;AAAA,YAC/B,QAAQ;AAAA,cACP,OAAO,YAAY;AAAA,cACnB,gBAAgB;AAAA,YACjB;AAAA,UACD,CAAC;AACD,gBAAM,YAAY,UAAU;AAAA,YAC3B,QAAQ;AAAA,cACP;AAAA,gBACC;AAAA,cACD;AAAA,YACD;AAAA,UACD,CAAC;AAED,gBAAM,UAAS,iBAAY,UAAZ,mBAAmB,SAAS,MAAM;AAAA,aAChD,mCAAS,SAAQ;AAAA;AAElB,iBAAM,iCAAQ;AAAA,YACb,WAAW;AAAA,cACV,QAAQ,YAAY;AAAA,cACpB,QAAQ,+CAA+C,YAAY,KAAK,GAAG;AAAA,YAC5E,CAAC;AAAA;AAEF;AAAA,QAED,KAAK;AACJ,gBAAM,WAAW,MAAM,OAAO,MAAM,OAAO;AAAA,YAC1C,OAAO,EAAE,OAAO,YAAY,QAAQ;AAAA,YACpC,QAAQ,EAAE,MAAM,KAAK;AAAA,YACrB,QAAQ,EAAE,gBAAgB,MAAM;AAAA,YAChC,QAAQ;AAAA,cACP,OAAO,YAAY;AAAA,cACnB,gBAAgB;AAAA,YACjB;AAAA,UACD,CAAC;AACD,gBAAM,YAAY,UAAU;AAAA,YAC3B,QAAQ;AAAA,cACP;AAAA,gBACC;AAAA,cACD;AAAA,YACD;AAAA,UACD,CAAC;AAED,gBAAM,WAAU,iBAAY,UAAZ,mBAAmB,SAAS,MAAM;AAAA,aACjD,qCAAU,SAAQ;AAAA;AAEnB,iBAAM,mCAAS;AAAA,YACd,WAAW;AAAA,cACV,QAAQ,YAAY;AAAA,cACpB,QAAQ,iDAAiD,YAAY,KAAK,GAAG;AAAA,YAC9E,CAAC;AAAA;AAEF;AAAA,MACF;AAAA,IACD,QAAQ;AACP,YAAM,YAAY,UAAU,YAAY;AAAA,IACzC;AAAA,EACD;AACD;",
  "names": []
}
