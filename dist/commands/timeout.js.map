{
  "version": 3,
  "sources": ["../../commands/timeout.ts"],
  "sourcesContent": ["import type {\n\tChatInputCommandInteraction,\n\tGuildMember,\n\tTextChannel,\n} from \"discord.js\";\nimport { SlashCommandBuilder, PermissionFlagsBits } from \"discord.js\";\nimport {\n\terrorEmbedBuilder,\n\tsuccessEmbedBuilder,\n\twarnEmbedBuilder,\n\tlogBuilder,\n} from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class Mute {\n\tdata = new SlashCommandBuilder()\n\t\t.setName(\"timeout\")\n\t\t.setDescription(\"Timeouts a user from the server.\")\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.ModerateMembers)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"add\")\n\t\t\t\t.setDescription(\"Timeout a user\")\n\t\t\t\t.addUserOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"user\")\n\t\t\t\t\t\t.setDescription(\"Select the user (or user id) to timeout them.\")\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t)\n\t\t\t\t.addIntegerOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"minutes\")\n\t\t\t\t\t\t.setDescription(\"The minutes the user will be timeouted for.\")\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t)\n\t\t\t\t.addStringOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"reason\")\n\t\t\t\t\t\t.setDescription(\n\t\t\t\t\t\t\t\"You can pass a string with a reason for timeouting the user.\",\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"remove\")\n\t\t\t\t.setDescription(\"Remove the timeout from a user!\")\n\t\t\t\t.addUserOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"user\")\n\t\t\t\t\t\t.setDescription(\"Select the user (or user id) to timeout them.\")\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t),\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t],\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t!interaction.guild?.members?.me?.permissions?.has(\n\t\t\t\tPermissionFlagsBits.ModerateMembers,\n\t\t\t)\n\t\t) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\n\t\t\t\t\t\t\"The bot doesn't have permissions to timeout members!\",\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\tephemeral: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst member = interaction.options.getMember(\"user\") as GuildMember;\n\n\t\tif (!member) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [errorEmbedBuilder(\"Member could not be found!\")],\n\t\t\t\tephemeral: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\tcase \"add\":\n\t\t\t\tconst minutes = interaction.options.getInteger(\"minutes\", true);\n\t\t\t\tconst reason = interaction.options.getString(\"reason\", true);\n\t\t\t\tconst msg = await member\n\t\t\t\t\t.send({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\twarnEmbedBuilder(\n\t\t\t\t\t\t\t\t`You have been timeouted in **${interaction.guild.name}**!`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {});\n\n\t\t\t\ttry {\n\t\t\t\t\tawait member.timeout(minutes * 60_000, reason);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tawait interaction.reply({\n\t\t\t\t\t\tembeds: [errorEmbedBuilder(`${member.user} cannot be timeouted!`)],\n\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t});\n\t\t\t\t\tawait msg?.edit({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\twarnEmbedBuilder(\n\t\t\t\t\t\t\t\t`${interaction.user} tried to timeout you in **${interaction.guild.name}**!`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait interaction.reply({\n\t\t\t\t\tembeds: [\n\t\t\t\t\t\tsuccessEmbedBuilder(`${member.user} was sucessfully timeouted.`),\n\t\t\t\t\t],\n\t\t\t\t\tephemeral: true,\n\t\t\t\t});\n\n\t\t\t\tconst onGuild = await prisma.guild.findUnique({\n\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\tselect: { logs: true },\n\t\t\t\t});\n\n\t\t\t\tconst onLogs = interaction.guild.channels.cache.get(\n\t\t\t\t\tonGuild?.logs ?? \"\",\n\t\t\t\t) as TextChannel;\n\t\t\t\tawait onLogs?.send(\n\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\treason,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase \"remove\":\n\t\t\t\ttry {\n\t\t\t\t\tawait member.timeout(null);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tawait interaction.reply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\terrorEmbedBuilder(`${member.user} cannot be un-timeouted!`),\n\t\t\t\t\t\t],\n\t\t\t\t\t\tephemeral: true,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tawait interaction.reply({\n\t\t\t\t\tembeds: [\n\t\t\t\t\t\tsuccessEmbedBuilder(`${member.user} was sucessfully un-timeouted.`),\n\t\t\t\t\t],\n\t\t\t\t\tephemeral: true,\n\t\t\t\t});\n\n\t\t\t\tconst offGuild = await prisma.guild.findUnique({\n\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\tselect: { logs: true },\n\t\t\t\t});\n\n\t\t\t\tconst offLogs = interaction.guild.channels.cache.get(\n\t\t\t\t\toffGuild?.logs ?? \"\",\n\t\t\t\t) as TextChannel;\n\t\t\t\tawait offLogs?.send(\n\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\treason: `Un-Timeouted ${member.user}`,\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
