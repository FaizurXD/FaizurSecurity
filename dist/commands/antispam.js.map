{
  "version": 3,
  "sources": ["../../commands/antispam.ts"],
  "sourcesContent": ["import type {\n\tChatInputCommandInteraction,\n\tGuildMember,\n\tTextChannel,\n} from \"discord.js\";\nimport { SlashCommandBuilder, PermissionFlagsBits } from \"discord.js\";\nimport {\n\tdefaultError,\n\tsuccessEmbedBuilder,\n\terrorEmbedBuilder,\n\tlogBuilder,\n} from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class AntiSpam {\n\tdata = new SlashCommandBuilder()\n\t\t.setName(\"antispam\")\n\t\t.setDescription(\"Toggle Anti Spam in your server!\")\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand.setName(\"on\").setDescription(\"turn anti spam on!\"),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand.setName(\"off\").setDescription(\"turn anti spam off!\"),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"set\")\n\t\t\t\t.setDescription(\"Set the different limits of the antispam filter\")\n\t\t\t\t.addIntegerOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"minutes\")\n\t\t\t\t\t\t.setDescription(\n\t\t\t\t\t\t\t\"You can pass an integer which will the determines the minutes of the mute\",\n\t\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t\t.addIntegerOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"limit\")\n\t\t\t\t\t\t.setDescription(\n\t\t\t\t\t\t\t\"You can pass an integer which will the determines the amount of messages before a mute\",\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\ttry {\n\t\t\tif (!interaction.inGuild()) {\n\t\t\t\tawait interaction.reply({\n\t\t\t\t\tembeds: [\n\t\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait interaction.deferReply({ ephemeral: true });\n\n\t\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\t\tcase \"on\":\n\t\t\t\t\tconst onGuild = await prisma.guild.upsert({\n\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tlogs: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tupdate: {\n\t\t\t\t\t\t\tantiSpam: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tantiSpam: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\"anti spam filter has been activated successfully!\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst onLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\tonGuild?.logs ?? \"\",\n\t\t\t\t\t) as TextChannel;\n\t\t\t\t\tawait onLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\treason: `anti-spam feature has been activated by ${interaction.user.tag}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"off\":\n\t\t\t\t\tconst offGuild = await prisma.guild.upsert({\n\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tlogs: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tupdate: {\n\t\t\t\t\t\t\tantiSpam: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tantiSpam: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\"anti spam filter has been deactivated successfully!\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\n\t\t\t\t\tconst offLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\toffGuild?.logs ?? \"\",\n\t\t\t\t\t) as TextChannel;\n\t\t\t\t\tawait offLogs?.send(\n\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\treason: `anti-spam feature has been deactivated by ${interaction.user.tag}`,\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"set\":\n\t\t\t\t\tconst minutes = interaction.options.getInteger(\"minutes\");\n\t\t\t\t\tconst limit = interaction.options.getInteger(\"limit\");\n\n\t\t\t\t\tif (minutes) {\n\t\t\t\t\t\tconst minGuild = await prisma.guild.upsert({\n\t\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\tlogs: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tupdate: {\n\t\t\t\t\t\t\t\tspamMinutes: minutes,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\t\tspamMinutes: minutes,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst minLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\t\tminGuild?.logs ?? \"\",\n\t\t\t\t\t\t) as TextChannel;\n\t\t\t\t\t\tawait minLogs?.send(\n\t\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\t\treason: `anti-spam minutes has been changed by ${interaction.user.tag}`,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (limit) {\n\t\t\t\t\t\tconst limitGuild = await prisma.guild.upsert({\n\t\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\t\tlogs: true,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tupdate: {\n\t\t\t\t\t\t\t\tspamMessageLimit: limit,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\t\tspamMessageLimit: limit,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst limitLogs = interaction.guild?.channels.cache.get(\n\t\t\t\t\t\t\tlimitGuild?.logs ?? \"\",\n\t\t\t\t\t\t) as TextChannel;\n\t\t\t\t\t\tawait limitLogs?.send(\n\t\t\t\t\t\t\tlogBuilder({\n\t\t\t\t\t\t\t\tmember: interaction.member as GuildMember,\n\t\t\t\t\t\t\t\treason: `anti-spam message limit has been changed by ${interaction.user.tag}`,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\"Your settings have been saved successfully!\",\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t}\n\t\t} catch {\n\t\t\tawait interaction.editReply(defaultError);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
