{
  "version": 3,
  "sources": ["../../commands/whitelist.ts"],
  "sourcesContent": ["import type { ChatInputCommandInteraction, GuildMember } from \"discord.js\";\nimport {\n\tSlashCommandBuilder,\n\tPermissionFlagsBits,\n\tEmbedBuilder,\n\tColors,\n} from \"discord.js\";\nimport {\n\tdefaultError,\n\terrorEmbedBuilder,\n\tsuccessEmbedBuilder,\n} from \"../utils.js\";\nimport emojis from \"../emojis.js\";\nimport prisma from \"../database.js\";\n\nexport default class Whitelist {\n\tdata = new SlashCommandBuilder()\n\t\t.setName(\"whitelist\")\n\t\t.setDescription(\"Manage the whitelist!\")\n\t\t.setDefaultMemberPermissions(PermissionFlagsBits.Administrator)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"mod\")\n\t\t\t\t.setDescription(\"The default mod role!\")\n\t\t\t\t.addRoleOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"role\")\n\t\t\t\t\t\t.setDescription(\"The default moderator role that will be set\")\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"admin\")\n\t\t\t\t.setDescription(\"Give a user admin perms (dangerous)\")\n\t\t\t\t.addUserOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"user\")\n\t\t\t\t\t\t.setDescription(\"The user that will be made an admin\")\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"owner\")\n\t\t\t\t.setDescription(\"Add another owner to your server (very dangerous)\")\n\t\t\t\t.addUserOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"user\")\n\t\t\t\t\t\t.setDescription(\"The user that will be made an admin\")\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand.setName(\"show\").setDescription(\"The all whitelisted roles\"),\n\t\t)\n\t\t.addSubcommand((subcommand) =>\n\t\t\tsubcommand\n\t\t\t\t.setName(\"remove\")\n\t\t\t\t.setDescription(\n\t\t\t\t\t\"Set a whitelist option to defaults or remove an admin/owner\",\n\t\t\t\t)\n\t\t\t\t.addStringOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"setting\")\n\t\t\t\t\t\t.setDescription(\"What setting you wanna change\")\n\t\t\t\t\t\t.addChoices(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"member\",\n\t\t\t\t\t\t\t\tvalue: \"member\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"mod\",\n\t\t\t\t\t\t\t\tvalue: \"mod\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"admin\",\n\t\t\t\t\t\t\t\tvalue: \"admin\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"owner\",\n\t\t\t\t\t\t\t\tvalue: \"owner\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.setRequired(true),\n\t\t\t\t)\n\t\t\t\t.addUserOption((option) =>\n\t\t\t\t\toption\n\t\t\t\t\t\t.setName(\"user\")\n\t\t\t\t\t\t.setDescription(\n\t\t\t\t\t\t\t\"What members you want to remove from admin/owner whitelist?\",\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t);\n\n\tasync run(interaction: ChatInputCommandInteraction) {\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t],\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconst tempGuild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: interaction.guildId },\n\t\t\tselect: { owners: true },\n\t\t});\n\n\t\tif (\n\t\t\t!(\n\t\t\t\ttempGuild?.owners.includes(interaction.user.id) ||\n\t\t\t\tinteraction.guild?.ownerId === interaction.user.id\n\t\t\t)\n\t\t) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\n\t\t\t\t\t\t\"Only an owner can use the </whitelist:1014153355377004670>.\",\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t\tephemeral: true,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst role = interaction.options.getRole(\"role\");\n\t\t\tawait interaction.deferReply({ ephemeral: true });\n\n\t\t\tswitch (interaction.options.getSubcommand()) {\n\t\t\t\tcase \"member\":\n\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { members: role?.id },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tmembers: role?.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t`Successfully set the **Member** role as ${role}`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"mod\":\n\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { mods: role?.id },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tmods: role?.id,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t`Successfully set the **Moderator** role as ${role}`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"admin\":\n\t\t\t\t\tconst member = interaction.options.getMember(\"user\") as GuildMember;\n\n\t\t\t\t\tconst tempGuild = await prisma.guild.findUnique({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tselect: { admins: true },\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!member) {\n\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"That user in not on this server!\")],\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tempGuild?.admins?.includes(member.user.id)) {\n\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"Member is already an admin!\")],\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { admins: { push: member.id } },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\tadmins: [member.id],\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t`Successfully added ${member.user} as an **admin**!`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"owner\":\n\t\t\t\t\tconst owner = interaction.options.getMember(\"user\") as GuildMember;\n\n\t\t\t\t\tconst tempGuild2 = await prisma.guild.findUnique({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tselect: { owners: true },\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!owner) {\n\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"That user in not on this server!\")],\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tempGuild2?.owners?.includes(owner.user.id)) {\n\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"Member is already an owner!\")],\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\tupdate: { owners: { push: owner.id } },\n\t\t\t\t\t\tcreate: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t\towners: [owner.id],\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t`Successfully added ${owner.user} as an **owner**!`,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"show\":\n\t\t\t\t\tconst NOT_SET = `${emojis.error} Not Set`;\n\n\t\t\t\t\tconst guild = await prisma.guild.findUnique({\n\t\t\t\t\t\twhere: {\n\t\t\t\t\t\t\tguild: interaction.guildId,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tselect: {\n\t\t\t\t\t\t\tmembers: true,\n\t\t\t\t\t\t\tmods: true,\n\t\t\t\t\t\t\tadmins: true,\n\t\t\t\t\t\t\towners: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tconst showEmbed = new EmbedBuilder({\n\t\t\t\t\t\ttitle: `${emojis.list}  Whitelist`,\n\t\t\t\t\t\tfields: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"__Members__\",\n\t\t\t\t\t\t\t\tinline: true,\n\t\t\t\t\t\t\t\tvalue: `${emojis.reply1}${\n\t\t\t\t\t\t\t\t\tguild?.members ? `<@&${guild?.members}>` : NOT_SET\n\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"__Mods__\",\n\t\t\t\t\t\t\t\tinline: true,\n\t\t\t\t\t\t\t\tvalue: `${emojis.reply1}${\n\t\t\t\t\t\t\t\t\tguild?.mods ? `<@&${guild?.mods}>` : NOT_SET\n\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"__Admins__\",\n\t\t\t\t\t\t\t\tinline: true,\n\t\t\t\t\t\t\t\tvalue: `${emojis.reply1}${\n\t\t\t\t\t\t\t\t\tguild?.admins?.length\n\t\t\t\t\t\t\t\t\t\t? guild.admins.reduce(\n\t\t\t\t\t\t\t\t\t\t\t\t(acc, val) => acc.concat(`<@${val}>\\n`),\n\t\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: NOT_SET\n\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tname: \"__Owners__\",\n\t\t\t\t\t\t\t\tinline: true,\n\t\t\t\t\t\t\t\tvalue: `${emojis.reply1}${\n\t\t\t\t\t\t\t\t\tguild?.owners?.length\n\t\t\t\t\t\t\t\t\t\t? guild.owners.reduce(\n\t\t\t\t\t\t\t\t\t\t\t\t(acc, val) => acc.concat(`<@${val}>\\n`),\n\t\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: NOT_SET\n\t\t\t\t\t\t\t\t}`,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t\tcolor: 0x2b2d31,\n\t\t\t\t\t\tfooter: {\n\t\t\t\t\t\t\ttext: interaction.guild?.name ?? \"\",\n\t\t\t\t\t\t\ticon_url: interaction.guild?.iconURL() ?? \"\",\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\n\t\t\t\t\tawait interaction.editReply({ embeds: [showEmbed] });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"remove\":\n\t\t\t\t\tconst setting = interaction.options.getString(\"setting\");\n\t\t\t\t\tswitch (setting) {\n\t\t\t\t\t\tcase \"member\":\n\t\t\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\t\t\tupdate: { members: null },\n\t\t\t\t\t\t\t\tcreate: { guild: interaction.guildId, members: null },\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\t\t\"Successfully reset member role to default!\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"mod\":\n\t\t\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\t\t\tupdate: { mods: null },\n\t\t\t\t\t\t\t\tcreate: { guild: interaction.guildId, mods: null },\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\t\t\"Successfully reset mod role to default!\",\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"admin\":\n\t\t\t\t\t\t\tconst member = interaction.options.getMember(\n\t\t\t\t\t\t\t\t\"user\",\n\t\t\t\t\t\t\t) as GuildMember;\n\n\t\t\t\t\t\t\tconst tempGuild = await prisma.guild.findUnique({\n\t\t\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\t\t\tselect: { admins: true },\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (!tempGuild?.admins?.length) {\n\t\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"No admins in this server\")],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!member) {\n\t\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\t\t\t\terrorEmbedBuilder(\"That user in not on this server!\"),\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst newAdmins = tempGuild?.admins?.filter(\n\t\t\t\t\t\t\t\t(admin) => admin !== member?.user?.id,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tJSON.stringify(tempGuild?.admins) === JSON.stringify(newAdmins)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"That user is not an admin!\")],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\t\t\tupdate: { admins: newAdmins },\n\t\t\t\t\t\t\t\tcreate: { guild: interaction.guildId },\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\t\t`Successfully removed ${member.user} as an admin!`,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase \"owner\":\n\t\t\t\t\t\t\tconst owner = interaction.options.getMember(\n\t\t\t\t\t\t\t\t\"user\",\n\t\t\t\t\t\t\t) as GuildMember;\n\n\t\t\t\t\t\t\tconst tempGuild2 = await prisma.guild.findUnique({\n\t\t\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\t\t\tselect: { owners: true },\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (!tempGuild2?.owners?.length) {\n\t\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"No admins in this server\")],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!owner) {\n\t\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\t\t\t\terrorEmbedBuilder(\"That user in not on this server!\"),\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst newOwners = tempGuild2?.owners?.filter(\n\t\t\t\t\t\t\t\t(o) => o !== owner?.user?.id,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tJSON.stringify(tempGuild2?.owners) === JSON.stringify(newOwners)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\t\tembeds: [errorEmbedBuilder(\"That user is not an admin!\")],\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tawait prisma.guild.upsert({\n\t\t\t\t\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\t\t\t\t\tupdate: { owners: newOwners },\n\t\t\t\t\t\t\t\tcreate: { guild: interaction.guildId },\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tawait interaction.editReply({\n\t\t\t\t\t\t\t\tembeds: [\n\t\t\t\t\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t\t\t\t\t`Successfully removed ${owner?.user} as an owner!`,\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\tawait interaction.editReply(defaultError);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["tempGuild", "tempGuild2", "member", "_a", "owner"]
}
