{
  "version": 3,
  "sources": ["../../events/setup.ts"],
  "sourcesContent": ["import type { Interaction, TextChannel, VoiceChannel } from \"discord.js\";\nimport {\n\tPermissionFlagsBits,\n\tEvents,\n\tEmbedBuilder,\n\tColors,\n\tActionRowBuilder,\n\tButtonBuilder,\n\tButtonStyle,\n} from \"discord.js\";\nimport {\n\toptionButtons,\n\tsuccessEmbedBuilder,\n\tgetQuarantine,\n\terrorEmbedBuilder,\n} from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class Setup {\n\tname = Events.InteractionCreate;\n\n\tasync run(interaction: Interaction) {\n\t\tif (!interaction.isButton()) return;\n\n\t\tif (!interaction.inGuild()) {\n\t\t\tawait interaction.reply({\n\t\t\t\tembeds: [\n\t\t\t\t\terrorEmbedBuilder(\"This command can only be run on a server!\"),\n\t\t\t\t],\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tif (interaction.customId === \"antispam_yes\") {\n\t\t\tawait interaction.deferReply();\n\t\t\tawait prisma.guild.upsert({\n\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\tupdate: { antiSpam: true },\n\t\t\t\tcreate: { guild: interaction.guildId, antiSpam: true },\n\t\t\t});\n\t\t} else if (interaction.customId === \"antispam_no\") {\n\t\t\tawait interaction.deferReply();\n\t\t\tawait prisma.guild.update({\n\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\tdata: { antiSpam: false },\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tinteraction.customId === \"antispam_yes\" ||\n\t\t\tinteraction.customId === \"antispam_no\"\n\t\t) {\n\t\t\tconst embed = new EmbedBuilder({\n\t\t\t\ttitle: \":speech_balloon: Anti Toxicity\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"<:reply:1067159718646263910> Would you like to use our anti toxicity system to mantain a PG-13 environment in the server?\",\n\t\t\t\tcolor: 0x2b2d31,\n\t\t\t});\n\n\t\t\tawait interaction.editReply({\n\t\t\t\tembeds: [embed],\n\t\t\t\tcomponents: [optionButtons(\"antitoxicity\")],\n\t\t\t});\n\t\t}\n\n\t\tif (interaction.customId === \"antitoxicity_yes\") {\n\t\t\tawait interaction.deferReply();\n\t\t\tawait prisma.guild.upsert({\n\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\tupdate: { toxicityFilter: true },\n\t\t\t\tcreate: { guild: interaction.guildId, toxicityFilter: true },\n\t\t\t});\n\t\t} else if (interaction.customId === \"antitoxicity_no\") {\n\t\t\tawait interaction.deferReply();\n\t\t\tawait prisma.guild.update({\n\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\tdata: { toxicityFilter: false },\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tinteraction.customId === \"antitoxicity_yes\" ||\n\t\t\tinteraction.customId === \"antitoxicity_no\"\n\t\t) {\n\t\t\tconst embed = new EmbedBuilder({\n\t\t\t\ttitle: \":scroll: Logger\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"<:reply:1067159718646263910> Would you like to use the logger to know how your moderators use this bot?\",\n\t\t\t\tcolor: 0x2b2d31,\n\t\t\t});\n\n\t\t\tawait interaction.editReply({\n\t\t\t\tembeds: [embed],\n\t\t\t\tcomponents: [optionButtons(\"logger\")],\n\t\t\t});\n\t\t}\n\n\t\tif (interaction.customId === \"logger_yes\") {\n\t\t\tawait interaction.deferReply();\n\t\t\tconst logsChannel = await interaction.guild?.channels.create({\n\t\t\t\tname: \"logs\",\n\t\t\t\tpermissionOverwrites: [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: interaction.guildId,\n\t\t\t\t\t\tdeny: [PermissionFlagsBits.ViewChannel],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t});\n\t\t\tawait prisma.guild.upsert({\n\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\tupdate: { logs: logsChannel?.id },\n\t\t\t\tcreate: { guild: interaction.guildId, logs: logsChannel?.id },\n\t\t\t});\n\t\t} else if (interaction.customId === \"logger_no\") {\n\t\t\tawait interaction.deferReply();\n\t\t\tawait prisma.guild.update({\n\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\tdata: { logs: null },\n\t\t\t});\n\t\t}\n\n\t\tif (\n\t\t\tinteraction.customId === \"logger_yes\" ||\n\t\t\tinteraction.customId === \"logger_no\"\n\t\t) {\n\t\t\tconst embed = new EmbedBuilder({\n\t\t\t\ttitle: \"<:check:1027354811164786739> Verification\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"<:reply:1067159718646263910> Would you also like to set up verification in this server? (this will create a members role and verification channel, if you want to customize it use the </verification:1073740081594122273> and </whitelist:1073740081594122277> commands), please note that setting up verification will remove permissions from everyone role.\",\n\t\t\t\tcolor: 0x2b2d31,\n\t\t\t});\n\n\t\t\tawait interaction.editReply({\n\t\t\t\tembeds: [embed],\n\t\t\t\tcomponents: [optionButtons(\"verification\")],\n\t\t\t});\n\t\t}\n\n\t\tif (interaction.customId === \"verification_yes\") {\n\t\t\tawait interaction.deferReply();\n\n\t\t\tconst channel = await interaction.guild?.channels.create({\n\t\t\t\tname: \"verify-here\",\n\t\t\t});\n\n\t\t\t// rome-ignore lint/style/noNonNullAssertion: Guild will always be defined, since this command doesn't allow you to run it in anything other than a guild.\n\t\t\tconst quarantine = await getQuarantine(interaction?.guild!);\n\n\t\t\tinteraction.guild?.channels.cache.forEach(async (ch) => {\n\t\t\t\tconst c = ch as TextChannel | VoiceChannel;\n\t\t\t\tawait c.permissionOverwrites?.edit(quarantine, { ViewChannel: false });\n\t\t\t});\n\n\t\t\tchannel?.permissionOverwrites?.edit(quarantine, {\n\t\t\t\tViewChannel: true,\n\t\t\t\tSendMessages: false,\n\t\t\t});\n\t\t\tchannel?.permissionOverwrites?.edit(interaction.guildId, {\n\t\t\t\tViewChannel: false,\n\t\t\t});\n\n\t\t\tconst verificationButtons = new ActionRowBuilder<ButtonBuilder>({\n\t\t\t\tcomponents: [\n\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\tlabel: \"Verify\",\n\t\t\t\t\t\tstyle: ButtonStyle.Success,\n\t\t\t\t\t\tcustom_id: \"verify\",\n\t\t\t\t\t}),\n\t\t\t\t\tnew ButtonBuilder({\n\t\t\t\t\t\tlabel: \"Help\",\n\t\t\t\t\t\tstyle: ButtonStyle.Link,\n\t\t\t\t\t\turl: \"https://discord.gg/NxJzWWqhdQ\",\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tconst verificationEmbed = new EmbedBuilder({\n\t\t\t\ttitle: \"<:check:1027354811164786739> Verification\",\n\t\t\t\tdescription: `<:blank:1008721958210383902> <:arrow:1068604670764916876> To access \\`${interaction.guild?.name}\\` you must complete the verification process. \\n<:blank:1008721958210383902><:blank:1008721958210383902><:reply:1067159718646263910> Press on the **Verify** button below.`,\n\t\t\t\tcolor: 0x2b2d31,\n\t\t\t});\n\n\t\t\tawait channel?.send({\n\t\t\t\tembeds: [verificationEmbed],\n\t\t\t\tcomponents: [verificationButtons],\n\t\t\t});\n\t\t} else if (interaction.customId === \"verification_no\") {\n\t\t\tawait interaction.deferReply();\n\t\t}\n\n\t\tif (\n\t\t\tinteraction.customId === \"verification_yes\" ||\n\t\t\tinteraction.customId === \"verification_no\"\n\t\t) {\n\t\t\tconst embed = new EmbedBuilder({\n\t\t\t\ttitle: \"<:check:1027354811164786739> Anti Raid\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"<:reply:1067159718646263910> Perfect!, would you like to activate the Anti Raid Sytem?\",\n\t\t\t\tcolor: 0x2b2d31,\n\t\t\t});\n\n\t\t\tawait interaction.editReply({\n\t\t\t\tembeds: [embed],\n\t\t\t\tcomponents: [optionButtons(\"antiraid\")],\n\t\t\t});\n\t\t}\n\n\t\tif (interaction.customId === \"antiraid_yes\") {\n\t\t\tawait interaction.deferReply();\n\t\t\tawait prisma.guild.upsert({\n\t\t\t\twhere: { guild: interaction.guildId },\n\t\t\t\tupdate: { antiRaid: true },\n\t\t\t\tcreate: { guild: interaction.guildId, antiRaid: true },\n\t\t\t});\n\t\t} else if (interaction.customId === \"antiraid_no\") {\n\t\t\tawait interaction.deferReply();\n\t\t}\n\n\t\tif (\n\t\t\tinteraction.customId === \"antiraid_yes\" ||\n\t\t\tinteraction.customId === \"antiraid_no\"\n\t\t) {\n\t\t\tawait interaction.editReply({\n\t\t\t\tembeds: [\n\t\t\t\t\tsuccessEmbedBuilder(\n\t\t\t\t\t\t`Setup complete! Deleting this channel <t:${\n\t\t\t\t\t\t\tMath.floor(Date.now() / 1000) + 5\n\t\t\t\t\t\t}:R>.`,\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t});\n\n\t\t\tsetTimeout(async () => {\n\t\t\t\tawait interaction.channel?.delete();\n\t\t\t}, 5000);\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["_a"]
}
