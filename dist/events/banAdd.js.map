{
  "version": 3,
  "sources": ["../../events/banAdd.ts"],
  "sourcesContent": ["import type { GuildBan, TextChannel } from \"discord.js\";\nimport { Events, AuditLogEvent, PermissionFlagsBits } from \"discord.js\";\nimport { logBuilder, getQuarantine } from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class BanAdd {\n\tname = Events.GuildBanAdd;\n\n\tstatic times = 0;\n\tstatic users: string[] = [];\n\tstatic timeout = setTimeout(() => {\n\t\tBanAdd.times = 0;\n\t\tBanAdd.users = [];\n\t}, 20_000);\n\n\tasync run(ban: GuildBan) {\n\t\tconst guild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: ban.guild.id },\n\t\t\tselect: {\n\t\t\t\tantiRaid: true,\n\t\t\t\tlogs: true,\n\t\t\t\towners: true,\n\t\t\t\tadmins: true,\n\t\t\t},\n\t\t});\n\n\t\tBanAdd.users.push(ban.user.id);\n\t\tBanAdd.times++;\n\t\tBanAdd.timeout.refresh();\n\n\t\tif (BanAdd.times % 5 === 0) {\n\t\t\tconst auditLogFetch = await ban.guild.fetchAuditLogs({\n\t\t\t\tlimit: 1,\n\t\t\t\ttype: AuditLogEvent.MemberBanAdd,\n\t\t\t});\n\t\t\tconst log = auditLogFetch.entries.first();\n\n\t\t\tif (ban.client.user?.id === log?.executor?.id) return;\n\n\t\t\tconst member = await ban.guild.members.fetch(log?.executor?.id ?? \"\");\n\n\t\t\tif (\n\t\t\t\tguild?.admins.includes(member.user.id) ||\n\t\t\t\tguild?.owners.includes(member.user.id) ||\n\t\t\t\tmember.user.id === member.guild.ownerId\n\t\t\t)\n\t\t\t\treturn;\n\n\t\t\tconst quarantine = await getQuarantine(ban.guild);\n\n\t\t\tmember.roles.cache\n\t\t\t\t.filter((r) => r.id !== ban.guild.id)\n\t\t\t\t.forEach(async (r) => {\n\t\t\t\t\tawait member.roles\n\t\t\t\t\t\t.remove(r, \"Banning too many users\")\n\t\t\t\t\t\t.catch(async () => {\n\t\t\t\t\t\t\tif (!member.user.bot) return;\n\t\t\t\t\t\t\tr?.setPermissions([]).catch(() => {});\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\tawait member.roles.add(quarantine, \"Banning too many users\");\n\n\t\t\tawait member\n\t\t\t\t.timeout(1440 * 60_000, \"Banning too many users\")\n\t\t\t\t.catch(() => {});\n\n\t\t\tBanAdd.users.forEach(async (user) => {\n\t\t\t\tawait ban.guild.members.unban(user).catch(() => {});\n\t\t\t});\n\n\t\t\tconst logs = ban.guild?.channels.cache.get(\n\t\t\t\tguild?.logs ?? \"\",\n\t\t\t) as TextChannel | null;\n\t\t\tawait logs?.send(\n\t\t\t\tlogBuilder({\n\t\t\t\t\tmember,\n\t\t\t\t\treason: \"Too many users banned\",\n\t\t\t\t\tpunished: true,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";AACA,SAAS,QAAQ,qBAA0C;AAC3D,SAAS,YAAY,qBAAqB;AAC1C,OAAO,YAAY;AAEnB,qBAAqB,OAAO;AAAA,EAC3B,OAAO,OAAO;AAAA,EAEd,OAAO,QAAQ;AAAA,EACf,OAAO,QAAkB,CAAC;AAAA,EAC1B,OAAO,UAAU,WAAW,MAAM;AACjC,WAAO,QAAQ;AACf,WAAO,QAAQ,CAAC;AAAA,EACjB,GAAG,GAAM;AAAA,EAET,MAAM,IAAI,KAAe;AAf1B;AAgBE,UAAM,QAAQ,MAAM,OAAO,MAAM,WAAW;AAAA,MAC3C,OAAO,EAAE,OAAO,IAAI,MAAM,GAAG;AAAA,MAC7B,QAAQ;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,MACT;AAAA,IACD,CAAC;AAED,WAAO,MAAM,KAAK,IAAI,KAAK,EAAE;AAC7B,WAAO;AACP,WAAO,QAAQ,QAAQ;AAEvB,QAAI,OAAO,QAAQ,MAAM,GAAG;AAC3B,YAAM,gBAAgB,MAAM,IAAI,MAAM,eAAe;AAAA,QACpD,OAAO;AAAA,QACP,MAAM,cAAc;AAAA,MACrB,CAAC;AACD,YAAM,MAAM,cAAc,QAAQ,MAAM;AAExC,YAAI,SAAI,OAAO,SAAX,mBAAiB,UAAO,gCAAK,aAAL,mBAAe;AAAI;AAE/C,YAAM,SAAS,MAAM,IAAI,MAAM,QAAQ,QAAM,gCAAK,aAAL,mBAAe,OAAM,EAAE;AAEpE,WACC,+BAAO,OAAO,SAAS,OAAO,KAAK,SACnC,+BAAO,OAAO,SAAS,OAAO,KAAK,QACnC,OAAO,KAAK,OAAO,OAAO,MAAM;AAEhC;AAED,YAAM,aAAa,MAAM,cAAc,IAAI,KAAK;AAEhD,aAAO,MAAM,MACX,OAAO,CAAC,MAAM,EAAE,OAAO,IAAI,MAAM,EAAE,EACnC,QAAQ,OAAO,MAAM;AACrB,cAAM,OAAO,MACX,OAAO,GAAG,wBAAwB,EAClC,MAAM,YAAY;AAClB,cAAI,CAAC,OAAO,KAAK;AAAK;AACtB,iCAAG,eAAe,CAAC,GAAG,MAAM,MAAM;AAAA,UAAC;AAAA,QACpC,CAAC;AAAA,MACH,CAAC;AAEF,YAAM,OAAO,MAAM,IAAI,YAAY,wBAAwB;AAE3D,YAAM,OACJ,QAAQ,OAAO,KAAQ,wBAAwB,EAC/C,MAAM,MAAM;AAAA,MAAC,CAAC;AAEhB,aAAO,MAAM,QAAQ,OAAO,SAAS;AACpC,cAAM,IAAI,MAAM,QAAQ,MAAM,IAAI,EAAE,MAAM,MAAM;AAAA,QAAC,CAAC;AAAA,MACnD,CAAC;AAED,YAAM,QAAO,SAAI,UAAJ,mBAAW,SAAS,MAAM;AAAA,SACtC,+BAAO,SAAQ;AAAA;AAEhB,aAAM,6BAAM;AAAA,QACX,WAAW;AAAA,UACV;AAAA,UACA,QAAQ;AAAA,UACR,UAAU;AAAA,QACX,CAAC;AAAA;AAAA,IAEH;AAAA,EACD;AACD;",
  "names": []
}
