{
  "version": 3,
  "sources": ["../../events/roleCreate.ts"],
  "sourcesContent": ["import type { Role, TextChannel } from \"discord.js\";\nimport { Events, AuditLogEvent, PermissionFlagsBits } from \"discord.js\";\nimport { logBuilder, getQuarantine } from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class RoleCreations {\n\tname = Events.GuildRoleCreate;\n\n\tstatic times = 0;\n\tstatic roles: string[] = [];\n\tstatic timeout = setTimeout(() => {\n\t\tRoleCreations.times = 0;\n\t\tRoleCreations.roles = [];\n\t}, 5_000);\n\n\tasync run(role: Role) {\n\t\tconst guild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: role.guild.id },\n\t\t\tselect: { antiRaid: true, logs: true },\n\t\t});\n\n\t\tif (!guild?.antiRaid) return;\n\n\t\tRoleCreations.roles.push(role.id);\n\t\tRoleCreations.times++;\n\t\tRoleCreations.timeout.refresh();\n\n\t\tif (RoleCreations.times % 5 === 0) {\n\t\t\tconst auditLogFetch = await role.guild.fetchAuditLogs({\n\t\t\t\tlimit: 1,\n\t\t\t\ttype: AuditLogEvent.RoleCreate,\n\t\t\t});\n\t\t\tconst log = auditLogFetch.entries.first();\n\n\t\t\tif (role.client.user?.id === log?.executor?.id) return;\n\n\t\t\tconst member = await role.guild.members.fetch(log?.executor?.id ?? \"\");\n\t\t\tconst quarantine = await getQuarantine(role.guild);\n\n\t\t\tmember.roles.cache\n\t\t\t\t.filter((r) => r.id !== role.guild.id)\n\t\t\t\t.forEach(async (r) => {\n\t\t\t\t\tawait member.roles\n\t\t\t\t\t\t.remove(r, \"Creating too many roles\")\n\t\t\t\t\t\t.catch(async () => {\n\t\t\t\t\t\t\tif (!member.user.bot) return;\n\t\t\t\t\t\t\tr?.setPermissions([]).catch(() => {});\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\tif (quarantine) {\n\t\t\t\tawait member.roles.add(quarantine, \"Creating too many roles\");\n\t\t\t}\n\n\t\t\tawait member\n\t\t\t\t.timeout(1440 * 60_000, \"Creating too many roles\")\n\t\t\t\t.catch(() => {});\n\n\t\t\tRoleCreations.roles.forEach(async (r) => {\n\t\t\t\tconst rl = await role.guild.roles.fetch(r);\n\t\t\t\tawait rl?.delete()?.catch(() => {});\n\t\t\t});\n\n\t\t\tconst logs = member.guild?.channels.cache.get(\n\t\t\t\tguild?.logs ?? \"\",\n\t\t\t) as TextChannel;\n\t\t\tawait logs?.send(\n\t\t\t\tlogBuilder({\n\t\t\t\t\tmember,\n\t\t\t\t\treason: \"Too many roles created.\",\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";AACA,SAAS,QAAQ,qBAA0C;AAC3D,SAAS,YAAY,qBAAqB;AAC1C,OAAO,YAAY;AAEnB,qBAAqB,cAAc;AAAA,EAClC,OAAO,OAAO;AAAA,EAEd,OAAO,QAAQ;AAAA,EACf,OAAO,QAAkB,CAAC;AAAA,EAC1B,OAAO,UAAU,WAAW,MAAM;AACjC,kBAAc,QAAQ;AACtB,kBAAc,QAAQ,CAAC;AAAA,EACxB,GAAG,GAAK;AAAA,EAER,MAAM,IAAI,MAAY;AAfvB;AAgBE,UAAM,QAAQ,MAAM,OAAO,MAAM,WAAW;AAAA,MAC3C,OAAO,EAAE,OAAO,KAAK,MAAM,GAAG;AAAA,MAC9B,QAAQ,EAAE,UAAU,MAAM,MAAM,KAAK;AAAA,IACtC,CAAC;AAED,QAAI,EAAC,+BAAO;AAAU;AAEtB,kBAAc,MAAM,KAAK,KAAK,EAAE;AAChC,kBAAc;AACd,kBAAc,QAAQ,QAAQ;AAE9B,QAAI,cAAc,QAAQ,MAAM,GAAG;AAClC,YAAM,gBAAgB,MAAM,KAAK,MAAM,eAAe;AAAA,QACrD,OAAO;AAAA,QACP,MAAM,cAAc;AAAA,MACrB,CAAC;AACD,YAAM,MAAM,cAAc,QAAQ,MAAM;AAExC,YAAI,UAAK,OAAO,SAAZ,mBAAkB,UAAO,gCAAK,aAAL,mBAAe;AAAI;AAEhD,YAAM,SAAS,MAAM,KAAK,MAAM,QAAQ,QAAM,gCAAK,aAAL,mBAAe,OAAM,EAAE;AACrE,YAAM,aAAa,MAAM,cAAc,KAAK,KAAK;AAEjD,aAAO,MAAM,MACX,OAAO,CAAC,MAAM,EAAE,OAAO,KAAK,MAAM,EAAE,EACpC,QAAQ,OAAO,MAAM;AACrB,cAAM,OAAO,MACX,OAAO,GAAG,yBAAyB,EACnC,MAAM,YAAY;AAClB,cAAI,CAAC,OAAO,KAAK;AAAK;AACtB,iCAAG,eAAe,CAAC,GAAG,MAAM,MAAM;AAAA,UAAC;AAAA,QACpC,CAAC;AAAA,MACH,CAAC;AAEF,UAAI,YAAY;AACf,cAAM,OAAO,MAAM,IAAI,YAAY,yBAAyB;AAAA,MAC7D;AAEA,YAAM,OACJ,QAAQ,OAAO,KAAQ,yBAAyB,EAChD,MAAM,MAAM;AAAA,MAAC,CAAC;AAEhB,oBAAc,MAAM,QAAQ,OAAO,MAAM;AA1D5C,YAAAA;AA2DI,cAAM,KAAK,MAAM,KAAK,MAAM,MAAM,MAAM,CAAC;AACzC,gBAAMA,MAAA,yBAAI,aAAJ,gBAAAA,IAAc,MAAM,MAAM;AAAA,QAAC;AAAA,MAClC,CAAC;AAED,YAAM,QAAO,YAAO,UAAP,mBAAc,SAAS,MAAM;AAAA,SACzC,+BAAO,SAAQ;AAAA;AAEhB,aAAM,6BAAM;AAAA,QACX,WAAW;AAAA,UACV;AAAA,UACA,QAAQ;AAAA,QACT,CAAC;AAAA;AAAA,IAEH;AAAA,EACD;AACD;",
  "names": ["_a"]
}
