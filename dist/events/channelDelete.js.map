{
  "version": 3,
  "sources": ["../../events/channelDelete.ts"],
  "sourcesContent": ["import type { GuildBasedChannel, TextChannel } from \"discord.js\";\nimport { Events, AuditLogEvent, PermissionFlagsBits } from \"discord.js\";\nimport { logBuilder, getQuarantine } from \"../utils.js\";\nimport prisma from \"../database.js\";\n\nexport default class ChannelDeletions {\n\tname = Events.ChannelDelete;\n\n\tstatic times = 0;\n\tstatic timeout = setTimeout(() => {\n\t\tChannelDeletions.times = 0;\n\t}, 8_000);\n\n\tasync run(channel: GuildBasedChannel) {\n\t\tconst guild = await prisma.guild.findUnique({\n\t\t\twhere: { guild: channel.guild.id },\n\t\t\tselect: { antiRaid: true, logs: true },\n\t\t});\n\n\t\tif (!guild?.antiRaid) return;\n\t\tif (!channel.guild) return;\n\n\t\tChannelDeletions.times++;\n\t\tChannelDeletions.timeout.refresh();\n\n\t\tif (ChannelDeletions.times % 5 === 0) {\n\t\t\tconst auditLogFetch = await channel.guild.fetchAuditLogs({\n\t\t\t\tlimit: 1,\n\t\t\t\ttype: AuditLogEvent.ChannelDelete,\n\t\t\t});\n\t\t\tconst log = auditLogFetch.entries.first();\n\n\t\t\tif (channel.client.user?.id === log?.executor?.id) return;\n\n\t\t\tconst member = await channel.guild.members.fetch(log?.executor?.id ?? \"\");\n\t\t\tconst quarantine = await getQuarantine(channel.guild);\n\n\t\t\tmember.roles.cache\n\t\t\t\t.filter((r) => r.id !== channel.guild.id)\n\t\t\t\t.forEach(async (r) => {\n\t\t\t\t\tawait member.roles\n\t\t\t\t\t\t.remove(r, \"Deleting to many channels\")\n\t\t\t\t\t\t.catch(async () => {\n\t\t\t\t\t\t\tif (!member.user.bot) return;\n\t\t\t\t\t\t\tr?.setPermissions([]).catch(() => {});\n\t\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\tawait member.roles.add(quarantine, \"Deleting to many channels\");\n\n\t\t\tawait member\n\t\t\t\t.timeout(1440 * 60_000, \"Deleting too many channels\")\n\t\t\t\t.catch(() => {});\n\n\t\t\tconst logs = channel.guild?.channels.cache.get(\n\t\t\t\tguild?.logs ?? \"\",\n\t\t\t) as TextChannel | null;\n\t\t\tawait logs?.send(\n\t\t\t\tlogBuilder({\n\t\t\t\t\tmember,\n\t\t\t\t\treason: \"Too many channels deleted.\",\n\t\t\t\t\tpunished: true,\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\t}\n}\n"],
  "mappings": ";AACA,SAAS,QAAQ,qBAA0C;AAC3D,SAAS,YAAY,qBAAqB;AAC1C,OAAO,YAAY;AAEnB,qBAAqB,iBAAiB;AAAA,EACrC,OAAO,OAAO;AAAA,EAEd,OAAO,QAAQ;AAAA,EACf,OAAO,UAAU,WAAW,MAAM;AACjC,qBAAiB,QAAQ;AAAA,EAC1B,GAAG,GAAK;AAAA,EAER,MAAM,IAAI,SAA4B;AAbvC;AAcE,UAAM,QAAQ,MAAM,OAAO,MAAM,WAAW;AAAA,MAC3C,OAAO,EAAE,OAAO,QAAQ,MAAM,GAAG;AAAA,MACjC,QAAQ,EAAE,UAAU,MAAM,MAAM,KAAK;AAAA,IACtC,CAAC;AAED,QAAI,EAAC,+BAAO;AAAU;AACtB,QAAI,CAAC,QAAQ;AAAO;AAEpB,qBAAiB;AACjB,qBAAiB,QAAQ,QAAQ;AAEjC,QAAI,iBAAiB,QAAQ,MAAM,GAAG;AACrC,YAAM,gBAAgB,MAAM,QAAQ,MAAM,eAAe;AAAA,QACxD,OAAO;AAAA,QACP,MAAM,cAAc;AAAA,MACrB,CAAC;AACD,YAAM,MAAM,cAAc,QAAQ,MAAM;AAExC,YAAI,aAAQ,OAAO,SAAf,mBAAqB,UAAO,gCAAK,aAAL,mBAAe;AAAI;AAEnD,YAAM,SAAS,MAAM,QAAQ,MAAM,QAAQ,QAAM,gCAAK,aAAL,mBAAe,OAAM,EAAE;AACxE,YAAM,aAAa,MAAM,cAAc,QAAQ,KAAK;AAEpD,aAAO,MAAM,MACX,OAAO,CAAC,MAAM,EAAE,OAAO,QAAQ,MAAM,EAAE,EACvC,QAAQ,OAAO,MAAM;AACrB,cAAM,OAAO,MACX,OAAO,GAAG,2BAA2B,EACrC,MAAM,YAAY;AAClB,cAAI,CAAC,OAAO,KAAK;AAAK;AACtB,iCAAG,eAAe,CAAC,GAAG,MAAM,MAAM;AAAA,UAAC;AAAA,QACpC,CAAC;AAAA,MACH,CAAC;AAEF,YAAM,OAAO,MAAM,IAAI,YAAY,2BAA2B;AAE9D,YAAM,OACJ,QAAQ,OAAO,KAAQ,4BAA4B,EACnD,MAAM,MAAM;AAAA,MAAC,CAAC;AAEhB,YAAM,QAAO,aAAQ,UAAR,mBAAe,SAAS,MAAM;AAAA,SAC1C,+BAAO,SAAQ;AAAA;AAEhB,aAAM,6BAAM;AAAA,QACX,WAAW;AAAA,UACV;AAAA,UACA,QAAQ;AAAA,UACR,UAAU;AAAA,QACX,CAAC;AAAA;AAAA,IAEH;AAAA,EACD;AACD;",
  "names": []
}
